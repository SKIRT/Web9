/**

\page AdminUpdatePTS Updating PTS

## Introduction

The instructions for updating the PTS9 repository are very similar to those for the SKIRT9 repository, but many of the
steps are not applicable.

The PTS9 repository follows the GitHub \em fork \em and \em pull workflow model. This means you should <b>never</b>
push any changes directly to the PTS9 repository. Instead, contributors <b>including administrators</b> should push
suggested changes to a topic branch (\em not the master branch) in their own fork and create a pull request, which is
then handled by an administrator as described on this page below. For more information, see \ref DevGitHubFlow.

As an administrator, your local copy of the PTS code must be connected to both the main PTS9 repository and your
own fork of this repository. For more information, see \ref AdminStruct.

The GitHub Desktop application provides a nice graphical user interface on top of \c git. It facilitates many \c git
workflow operations and is easy to learn. Moreover, GitHub Desktop operations can be mixed with raw \c git commands in
a terminal at will. For more information, see \ref AdminTools.

## Handling a pull request

Handling a pull request for the PTS9 repository, created by yourself or by another user, involves the steps listed
below.

- Pull a copy of the pull request to your local computer (instructions can be found on the GitHub page for the pull
request). This step is not applicable if you created the pull request.

- Verify that the code conforms to the \ref DevCodingPTS. If not, fix the issues or ask the pull request author to do
so. In the latter case, pull the changes to your local copy before proceeding.

- Perform manual tests to ensure that new or updated features work as intended.

- Also attempty to verify that the proposed changes do not break any existing features. Because there are no formal
regression tests for PTS, this is often hard to do.

- Commit any changes made locally and push them to the pull request.

- On the GitHub page for the pull request, "merge and squash" the pull request into the master branch of the main PTS9
repository. The squash option combines all changes of the pull request into a single commit, thereby simplifying the
main repository's history.

- If you created the pull request, remove the corresponding remote branch by clicking the button offered on the GitHub
page for the pull request. (If the pull request was authored by someone else, you cannot remove their branch).

- Back on your local computer, update your local copy of the code \em and your personal fork by executing the following
commands (you can do this in GitHub Desktop as well, but it is often easier to copy/paste the raw \c git commands):

    \verbatim
git fetch upstream
git checkout master
git merge upstream/master
git push
    \endverbatim

- Remove your local branch corresponding to the pull request.

- If the change affected by the pull request is relevant to users, accordingly adjust the list of recent changes which
is published on the web site. Specifically, open the text file with path
<tt>~/SKIRT/Web9/git/root/text/31-InstallationGuide/RecentChanges.txt</tt> and add a line describing the change at the
end of the PTS section. The line should include the date of the merge commit.

- Update and publish the SKIRT web site as described in \ref AdminUpdateWeb. This step can be omitted if the change is
trivial, or delayed to combine multiple changes in a single publish operation.

*/
