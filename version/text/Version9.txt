/**

\page Version9 The SKIRT project -- version 9

\section Version9New What's new

Version 9 is the latest version of the \c SKIRT project that has been designed to allow simulating a wide range of
physics for dust and other transfer media. The \ref Version9Intro on this page describes the \c SKIRT project without
assuming any knowledge about previous versions. Readers familiar with \c SKIRT, or readers interested in the status of
version 9 development, might want to visit these pages:

- \ref NewInSKIRT9
- \ref NewInPTS9
- \ref OpenSource9
- \ref StatusRoadmap9
- \ref RecentChanges9


\section Version9avail Availability

The source code for the \c SKIRT project is publicly available under the terms defined in the license agreement. The
code is hosted at <a href="https://github.com">GitHub.com</a> in the following repositories:

 - <a href="https://github.com/SKIRT/SKIRT9">the SKIRT repository</a>
 - <a href="https://github.com/SKIRT/PTS9">the PTS repository</a>

This web site offers the documentation for the \c SKIRT project:

- <a href="../skirt9/_s_k_i_r_t.html">SKIRT documentation</a>
- <a href="../pts9/_p_t_s.html">PTS documentation</a>
- <a href="../version9/_tutorials.html">Tutorials for both SKIRT and PTS</a>
- <a href="../version9/_benchmarks.html">Benchmark information for both SKIRT and PTS</a>
- <a href="../version9/_downloads.html">Downloads for both SKIRT and PTS</a>

You can also access these pages by selecting the corresponding tab in the navigation bar at the top of each page.


\section Version9Intro Introduction

The \c SKIRT project offers state-of-the-art software for simulating radiation transfer in dusty astrophysical systems
such as galaxies, accretion disks, or star forming regions. At the project's heart is the C++ \c SKIRT code, which
employs the Monte Carlo technique to emulate the relevant physical processes including scattering, absorption and
emission by the transfer medium. The code features a wealth of built-in geometries, radiation sources, dust
characterizations, spatial grids, and detectors, in addition to various mechanisms for importing models generated by
hydrodynamical simulations. The configuration for a particular simulation is defined in a parameter file that can be
constructed through a user-friendly command-line Q&A session, or with an optional graphical interface.

Another optional component of the \c SKIRT project is the "Python Toolkit for SKIRT", or PTS. The Python code in this
toolkit can help prepare, postprocess, and visualize SKIRT-related data, or it can execute \c SKIRT simulations in
automated contexts.


\section Version9SKIRTFeatures SKIRT features

Model:
- Configure any one-, two- or three-dimensional geometry without limitation.
- Employ the extensive built-in library to describe the spatial distribution of primary sources and transfer media.
- Import components from hydrodynamic simulation snapshots using SPH, AMR, or Voronoi paradigms.
- Combine multiple sources and multiple media components, each with their own spatial distributions and properties.
- Combine different media types, including dust, electrons and neutral hydrogen (*).
- Rely on built-in turn-key dust mixtures or configure your own, including optical properties and size distributions.
- Include instruments for recording "observed" spectra, broadband images, and spectroscopic data cubes.
- Include probes for recording data internal to the model, such as cuts through the radiation field.

Physics:
- Multiple anisotropic scattering, absorption and (re-)emission by the transfer medium.
- Resonant scattering by hydrogen near the Lyman-alpha line (*).
- Doppler shifts caused by moving sources and/or media (kinematics).
- Polarization caused by scattering off spherical dust grains.
- Anisotropic and polarized primary sources.
- Self-consistent calculation of thermal re-emission by dust (iterative treatment of self-absorption).
- Calculation of stochastic heating of small grains in non-equilibrium conditions.
- Polarized emission by spheroidal dust grains (partially) aligned with the magnetic field.
- Self-consistent calculation of medium state (e.g. dust destruction) based on the primary radiation field.

Numerics:
- Monte Carlo method for tracing photon packets through the spatial domain.
- All standard accerelation techniques: peel-off, forced scattering, continuous absorption, core skipping (*), ...
- Photon packet wavelengths sampled from the source spectrum without intermediate interpolation.
- Separate, configurable wavelength grids for storing the radiation field and for discretizing dust emission spectra.
- Wide range of modern spatial grids, both regular and adaptive, including grids optimized for 1D or 2D models.
- Optional output of statistics that help estimate error bars on results.

User interface:
- Interactive console Q&A session to guide user through configuration process.
- Configuration defined in XML-based parameter files, allowing straightforward manual editing.
- Optional graphical user interface to create and edit configuration files.
- Support for commonly used units for reading input and writing output quantities

Performance:
- Efficient in both memory consumption and CPU time.
- Fully parallelized using multiple threads (shared memory) and/or multiple processes (distributed memory).

Code design:
- Written in standard C++14 with very few other dependencies.
- Modern object-oriented design with well-defined programming interfaces between components.
- Extensively documented source code.

(*) The Lyman-alpha radiation transfer capability is currently not ready for production use. It is quite tricky
to configure and the results have not yet been verified for more complex geometries.


\section Version9PTSFeatures PTS features

Working with \c SKIRT:
- Interact with \c SKIRT configuration files.
- Allow automated \c SKIRT execution (on the local host computer).
- Load \c SKIRT output files with support for units.
- Convolve SEDs or IFUs with the same broadband filters as those supported by \c SKIRT.
- Visualize \c SKIRT output, including image frames, SEDs, density cuts, temperature cuts, polarization maps, and more.

Supporting the \c SKIRT development process:
- Run functional test cases and prepare test reports.
- Convert various tabulated third-party data formats to \c SKIRT's unified built-in stored table format.
- Prepare \c SKIRT built-in resource packs for publication.
- Back up (portions of) the development data/source code directory.

User interface:
- Acessible from the command line, from notebooks (such as Jupyter), and through regular Python function calls.

Code design:
- Developed and tested with Python 3.7.2 using widely available packages only.
- Modern coding practices and nicely documented.

*/
