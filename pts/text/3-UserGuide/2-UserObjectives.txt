/**

\page UserObjectives PTS objectives and feature overview

\section UserObjectivesRationale Rationale for Python

The overall processes in which \c SKIRT simulations take place can be exceedingly complex. For example:
  - Input data for \c SKIRT must be converted from various third-party formats.
  - \c SKIRT output data must be further analyzed, plotted, combined, or processed into final results.
  - A large number of \c SKIRT simulations must be performed and the results must be organized accordingly.

The core \c SKIRT functionality is very performance-sensitive, and thus must be written in a fast compiled language
such as C++. For the peripheral functions listed above, however, ease of development is much more important than
execution speed. The Python language, properly extended with the relevant third-party libraries, perfectly fits the
requirement list. Data can easily be massaged even in non-trivial ways. Commonly available Python packages handle the
data formats used in astronomy and support scientific computations in general. Plotting capabilities support quick
graphs for internal analysis up to publication-quality figures. Because all of this functionality is available in a
single development environment, using Python for the \c SKIRT toolkit allows users to easily build their own workflows
on top of the basic toolkit capabilities.


\section UserObjectivesIntended Intended functionality

In previous versions, the Python toolkit for \c SKIRT (\c PTS) had far outgrown its original scope of being a basic
toolkit for \c SKIRT. Continuing the development of these broad and sometimes largely unrelated feature sets turned out
to be unrealistic. Therefore, we decided to take a new start with \c PTS version 9 (corresponding to \c SKIRT version
9).

\c PTS 9 includes basic tools for working with \c SKIRT 9 (e.g. local execution and visualization) and for supporting
the \c SKIRT 9 development process (e.g. resource conversion and functional testing). \c PTS 9 does \em not support
other versions of \c SKIRT, and does \em not include features that are less directly related to \c SKIRT or that have a
larger scope. \c PTS 9 is written in Python 3.7 (a recent Python version) with dependencies on equally recent
scientific packages.

\section UserObjectivesFeatures Features

The following table lists the current packages in \c PTS with an indication of their functionality and hyperlinks to
find more information.

<TABLE>
<TR><TH>Package</TH>  <TH>Description and hyperlinks to more information</TH></TR>
<TR><TD>admin</TD>
    <TD>Administrative functions, such as listing \c PTS package dependencies and creating archives for backup purposes<BR>
        see \ref UserAdminCmds; pts.admin; pts.admin.do.list_commands; pts.admin.do.list_dependencies</TD></TR>

<TR><TD>band</TD>
    <TD>Representing broadband filters, including transmission curve data for a set of standard bands<BR>
        see pts.band; pts.band.broadband.BroadBand; pts.band.do.list_bands</TD></TR>

<TR><TD>do</TD>
    <TD>Accessing \c PTS functionality from the command line or from the interactive Python prompt<BR>
        see \ref UserCmdLine; \ref UserNotebooks; pts.do; pts.do.command</TD></TR>

<TR><TD>simulation</TD>
    <TD>Interfacing with the \c SKIRT executable, the configuration file, and \c SKIRT output files (with units)<BR>
        see \ref UserScripts; \ref UserNotebooks; pts.simulation; pts.simulation.skirt.Skirt;
        pts.simulation.skifile.SkiFile; pts.simulation.fits; pts.simulation.text
        </TD></TR>

<TR><TD>storedtable</TD>
    <TD>Converting third-party data to \c SKIRT stored table format and otherwise accessing files in this format<BR>
        see pts.storedtable, pts.storedtable.do.list_stored_table_info; pts.storedtable.io;
        pts.storedtable.conversionspec</TD></TR>

<TR><TD>test</TD>
    <TD>Performing and reporting on \c SKIRT functional tests<BR>
        see pts.test, pts.test.do.test_functional; pts.test.functional.SkirtTestSuite</TD></TR>

<TR><TD>utils</TD>
    <TD>Basic utilities for use by other \c PTS components<BR>
        see pts.utils</TD></TR>

<TR><TD>visual</TD>
    <TD>Visualizing \c SKIRT results including image frames, SEDs, density cuts, temperature cuts, and polarization maps<BR>
        see \ref UserVisualCmds, pts.visual; pts.visual.makergbimages; pts.visual.plotcurves;
        pts.visual.plotdensitycuts; pts.visual.plottemperaturecuts; pts.visual.plotpolarization</TD></TR>

</TABLE>

*/
