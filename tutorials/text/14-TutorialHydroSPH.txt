/**

\page TutorialHydroSPH Stochastic heating in an SPH-simulated galaxy with SKIRT

\image html TutorialHydroSPHTemp.png

<i>Illustration above</i>: dust temperature map (along one of the coordinate planes) for the SPH-simulated galaxy
used in this tutorial.

In this tutorial you will use \c SKIRT to study the dust in a galaxy model produced by the EAGLE cosmological
simulations (http://icc.dur.ac.uk/Eagle ; http://eagle.strw.leidenuniv.nl). The EAGLE simulation code, an adjusted
version of Gadget-3 (http://wwwmpa.mpa-garching.mpg.de/gadget), includes a gravitational solver for dark and baryonic
matter and uses smoothed particles to implement the hydrodynamical evolution of the gas (SPH = smoothed particle
hydrodynamics). The simulation results are stored in consecutive snaphots as time progresses. For this tutorial, you
will use data for a single galaxy extracted from a snapshot of a (pre-production) EAGLE test run. Two data files are
provided, respectively listing stellar particles, representing the radiation sources, and gas particles, from which a
dust distribution can be derived.

The <a href="../skirt9/_concepts.html">SKIRT concepts section</a> includes a concept note that provides a more general
overview of \c SKIRT's capabilities for importing (magneto-)hydrodynamical simulation results.

\section TutorialHydroSphPre Getting ready

This tutorial assumes that you have completed the introductory \c SKIRT tutorial \ref TutorialBasicsMono, or that you
have otherwise acquired the working knowlegde introduced there. At the very least, before starting this tutorial, you
should have installed the \c SKIRT code, and preferably a FITS file viewer such as DS9 and the Python toolkit for \c
SKIRT (\c PTS).

To complete this tutorial, you need the files containing the data extracted from the EAGLE snapshot in a format
appropriate for importing into SKIRT. Download the files \c eagle_stars.txt and \c eagle_gas.txt from the <a
href="../version9/_downloads.html">SKIRT downloads page</a> and put them into your local working directory.

\section TutorialHydroSphSki Creating the ski file

\subsection TutorialHydroSphStart Starting the SKIRT Q&A

In a Terminal window, with an appropriate current directory, start \c SKIRT without any command line arguments. \c
SKIRT responds with a welcome message and starts an interactive session in the terminal window, during which it will
prompt you for all the information describing a particular simulation:

\verbatim
   Welcome to SKIRT v___
   Running on ___ for ___
   Interactively constructing a simulation...
 ? Enter the name of the ski file to be created: PanEagle
\endverbatim

The first question is for the filename of the \em ski file. For this tutorial, enter "PanEagle".

In this and subsequent tutorials, we skip the questions for which there is only one possible answer. The answers to
these questions are provided without prompting the user, and listing them here would bring no added value.

\subsection TutorialHydroSphLev Experience level

\verbatim
   Possible choices for the user experience level:
      1. Basic: for beginning users (hides many options)
      2. Regular: for regular users (hides esoteric options)
      3. Expert: for expert users (hides no options)
 ? Enter one of these numbers [1,3] (2): 1
\endverbatim

As discussed in a previous tutorial (see \ref TutorialBasicsMonoLev), the Q&A session can be tailored to the
experience level of the user. For this tutorial, select the \em Basic level.

\subsection TutorialHydroSphUni Units

\verbatim
   Possible choices for the units system:
      1. SI units
      2. Stellar units (length in AU, distance in pc)
      3. Extragalactic units (length in pc, distance in Mpc)
 ? Enter one of these numbers [1,3] (3):
   Possible choices for the output style for flux density and surface brightness:
      1. Neutral: λ F_λ = ν F_ν
      2. Wavelength: F_λ
      3. Frequency: F_ν
 ? Enter one of these numbers [1,3] (3):
\endverbatim

As discussed in a previous tutorial (see \ref TutorialBasicsMonoUni), \c SKIRT offers several output unit systems. For
the current tutorial, you will be modelling a galaxy, so select extragalactic units with the frequency output style
(the default options).

\subsection TutorialHydroSphSim Simulation mode

\verbatim
   Possible choices for the overall simulation mode:
      1. No medium - oligochromatic regime (a few discrete wavelengths)
      ...
      4. Extinction-only (no secondary emission)
      5. With secondary emission from dust
      6. With secondary emission from dust and iterations for dust self-absorption
 ? Enter one of these numbers [1,6] (4): 5
\endverbatim

As discussed in a previous tutorial (see \ref TutorialBasicsMonoSim), the answer to this question determines the
wavelength regime of the simulation (oligochromatic or panchromatic) and sets the overall scheme for handling media in
the simulation. If the simulation's wavelength range includes MIR or FIR bands, dust emission is most likely relevant.
If the simulation covers UV and optical bands only, dust emission is most likely irrelevant.

If dust emission is enabled, you can also enable iterations for dust self-absorption, i.e. a self-consistent
calculation of the dust temperature through an iterative (and time-consuming) procedure. The relevance of dust
self-absorption depends on the optical depth of the modeled system: if there is a modest amount of dust, the system is
transparent to long-wavelength radiation, so self-absorption by dust is negligible. If the system is rather opaque, it
will absorb also mid- and far-infrared radiation, so self-absorption might be important.

In this tutorial, the goal is to produce a spectral energy distribution (SED) including infrared wavelengths and the
effects of the emission by stochastically heated dust grains. By definition this requires a panchromatic simulation and
dust emission. Howver, the overall optical depth in most galaxies does not require iterations for dust self-absorption.
Select the option called "With secondary emission from dust".

\subsection TutorialHydroSphPho Photon packets

\verbatim
 ? Enter the default number of photon packets launched per simulation segment [0,1e19] (1e6): 5e6
\endverbatim

To limit the run time for this tutorial, set the number of photon packets to \f$5 \times 10^6\f$. This number is
sufficient to produce an acceptable SED for the simple galaxy model used here, but it would be insufficient to produce
resolved images with an acceptable signal to noise level.

\subsection TutorialHydroSphSrc Source system

\verbatim
 ? Enter the shortest wavelength of photon packets launched from primary sources [0.0001 micron,1e6 micron] (0.09 micron):
 ? Enter the longest wavelength of photon packets launched from primary sources [0.0001 micron,1e6 micron] (100 micron):
 \endverbatim

For a panchromatic simulation, the source system requests the limits of the wavelength range to be considered for
primary sources. For this tutorial, simply accept the suggested default values, yielding a range of
\f$0.09~\mu{\text{m}} <= \lambda <= 100~\mu{\text{m}}\f$.

\verbatim
   Possible choices for item #1 in the primary sources list:
      1. A primary point source
      2. A primary source with a built-in geometry
      3. A primary source imported from smoothed particle data
        ...
 ? Enter one of these numbers or zero to terminate the list [0,5] (2): 3
 ? Enter the name of the file to be imported: eagle_stars.txt
\endverbatim

In this tutorial, primary source information is given as a list of smoothed stellar particles in a column text file
format appropriate for importing in \c SKIRT. Select the appropriate source component type and enter the name of your
stellar particle data file, i.e. "eagle_stars.txt".

\verbatim
   Possible choices for the SED family for assigning spectra to the imported sources:
      1. A black body SED family
      2. A Castelli-Kurucz SED family for stellar atmospheres
      3. A Bruzual-Charlot SED family for single stellar populations
         ...
 ? Enter one of these numbers [1,5] (1): 3
   Possible choices for the assumed initial mass function:
      1. Chabrier IMF
      2. Salpeter IMF
 ? Enter one of these numbers [1,2] (1):
   Possible choices for the wavelength resolution:
      1. Low wavelength resolution (1221 points)
      2. High wavelength resolution (6900 points)
 ? Enter one of these numbers [1,2] (1): 1
\endverbatim

For imported sources, each individual entity (i.e., in this case, each particle) is assigned an appropriate emission
spectrum (SED) from a set of templates called an SED \em family. \c SKIRT includes some frequently-used SED families
for single stellar populations (SSPs), such as those prepared and published by Bruzual & Charlot in 2003. These SED
families require three parameters: the initial mass, the metallicity, and the age of the stellar population.

Select the Bruzual-Charlot SED family with the Chabrier initial mass function and the lowest wavelength resolution
(both the default options). The higher wavelength resolution is relevant only when evaluating simulation results in
narrow wavelength ranges.

Let us have a look at the first few lines of the "eagle_stars.txt" stellar particle file:

\verbatim
# Stellar particles for a simulated galaxy (pre-production EAGLE run)
# SKIRT 9 import format for a particle source with the Bruzual Charlot SED family
#
# Column 1: x-coordinate (kpc)
# Column 2: y-coordinate (kpc)
# Column 3: z-coordinate (kpc)
# Column 4: smoothing length (kpc)
# Column 5: initial mass (Msun)
# Column 6: metallicity (1)
# Column 7: age (Gyr)
#
50.14044 -39.14663 -21.36022 31.15748 1319629 0.005035158 3.761856
...
\endverbatim

Lines starting with a hash sign (\#) contain comments intended for human beings; the other lines contain information
(columns of data values) for each particle. The comments are generally ignored by \c SKIRT with the important exception
that they may contain column descriptors, as they do in this example. Specifically, the lines starting with "# Column"
are recognized by SKIRT as column descriptors that convey information on the data values in the file. SKIRT recognizes
and uses the units specified between parentheses. If the file contains no column descriptors, the data values must be
specified in the default units as described in the documentation of the class(es) handling the import.

The first three columns in the file specify the \f$x\f$, \f$y\f$ and \f$z\f$ coordinates of the particle and the fourth
column is the smoothing length \f$h\f$. The number and interpretation of the subsequent columns depends on the
specified SED family. For the Bruzual-Charlot family, the remaining three columns provide the properties of the stellar
population represented by each particle: its initial mass \f$M_\mathrm{init}\f$ at \f$t=0\f$, its metallicity \f$Z\f$
(as a dimensionless fraction) and its age.

When asked for a second stellar component, enter zero to terminate the list.

\subsection TutorialHydroSphWave Wavelength grids

\verbatim
   Possible choices for the wavelength grid for storing the radiation field:
      1. A logarithmic wavelength grid
      2. A nested logarithmic wavelength grid
      3. A linear wavelength grid
 ? Enter one of these numbers [1,3] (1): 1
 ? Enter the shortest wavelength [0.0001 micron,1e6 micron]: 0.09
 ? Enter the longest wavelength [0.0001 micron,1e6 micron]: 100
 ? Enter the number of wavelength grid points [3,2000000000] (25): 25
\endverbatim

Primary sources assign randomly sampled wavelengths to the launched photon packets. These wavelengths can have any
floating point value in the primary source range configured for the simulation (here \f$0.09~\mu{\text{m}} <= \lambda
<= 100~\mu{\text{m}}\f$). However, it is impossible to use a similar "infinite" resolution when recording
wavelength dependent information on the radiation field in each spatial cell. By necessity, this information must
be stored in a finite number of wavelength bins. Because there may be many spatial cells in the simulation, the number
of wavelength bins used for storing the radiation field has a substantial effect on the memory consumption of the
simulation.

\c SKIRT offers several types of wavelength grids that can be used for discretizing a wavelength range:
  - A logarithmic grid creates wavelength bins of equal width in logarithmic space; this is usually the appropriate
    choice for large wavelength ranges.
  - A nested logarithmic grid merges a narrow fine logarithmic grid into a wider coarse grid; this is
    useful to provide higher wavelength resolution in a given subrange.
  - A linear grid creates wavelength bins of equal width in linear space; this can be useful to cover narrow
    wavelength ranges, for example centered on an emission line.

For storing the radiation field in this tutorial simulation, configure a logarithmic wavelength grid with a range that
matches the primary source range (\f$0.09~\mu{\text{m}} <= \lambda <= 100~\mu{\text{m}}\f$) and has the default number
of 25 bins.

\verbatim
   Possible choices for the wavelength grid for calculating the dust emission spectrum:
      1. A logarithmic wavelength grid
      2. A nested logarithmic wavelength grid
      3. A linear wavelength grid
 ? Enter one of these numbers [1,3] (1): 2
 ? Enter the shortest wavelength of the low-resolution grid [0.0001 micron,1e6 micron]: 1
 ? Enter the longest wavelength of the low-resolution grid [0.0001 micron,1e6 micron]: 1000
 ? Enter the number of wavelength grid points in the low-resolution grid [3,2000000000] (25): 75
 ? Enter the shortest wavelength of the high-resolution subgrid [0.0001 micron,1e6 micron]: 3
 ? Enter the longest wavelength of the high-resolution subgrid [0.0001 micron,1e6 micron]: 30
 ? Enter the number of wavelength grid points in the high-resolution subgrid [3,2000000000] (25): 35
\endverbatim

Similarly, the thermal emission spectrum for the dust in each spatial cell can only be calculated at a finite number of
wavelength grid points. This calculation happens on the fly, i.e. the spectrum does not need to be stored for all
spatial cells at the same time. As a result, the impact of the number of wavelength grid points on memory consumption
is limited, but there will still be an impact on performance.

In this tutorial simulation, you will include the effects of stochastically heated dust
grains, which manifest themselves as specific spectral features at infrared wavelengths. To properly captures these
features, the dust emission wavelenght grid must have sufficient resolution in the relevant range.

For calculating the dust emission spectrum in this tutorial simulation, select a nested logarithmic wavelength grid
ranging from 1 to 1000 \f$\mu\f$m, with a finer subgrid in the range from 3 to 30 \f$\mu\f$m. Specify 75 points in the
wider grid, and 35 points in the nested grid. The points of the courser grid that happen to lie inside the finer grid
range are automatically removed, so the total number of grid points will be smaller than 110.

\subsection TutorialHydroSphMed Medium system

\verbatim
   Possible choices for item #1 in the transfer media list:
      1. A transfer medium with a built-in geometry
      2. A transfer medium imported from smoothed particle data
      3. A transfer medium imported from data represented on an adaptive mesh (AMR grid)
      4. A transfer medium imported from data represented on a Voronoi mesh
 ? Enter one of these numbers [1,4] (1): 2
 ? Enter the name of the file to be imported: eagle_gas.txt
 ? Enter the fraction of the mass to be included (or one to include all) [0,1] (1): 0.2
 ? Do you want to import a metallicity column? [yes/no] (no): yes
 ? Do you want to import a temperature column? [yes/no] (no): no
\endverbatim

In this tutorial, the dust contents of the configured model is derived from the spatial distribution of the gas in the
SPH snapshot produced by the EAGLE simulation. \c SKIRT estimates the dust density distribution from the gas particle
data through a simple scheme: the dust density is assumed to be proportional to the density of the metallic gas. The
metal fraction for each particle must be included in the imported file. The constant proportionality factor is provided
as a parameter in the configuration.

Select the "import from SPH" medium component type and enter the name of your gas particle data file, i.e.
"eagle_gas.txt". Set the proportionality factor to a value of 0.2, and request that \c SKIRT imports a metallicity
column; the gas mass specified for the particle in the file will automatically be multiplied by both the constant
factor and the metallicity value for the particle in the file. Finally, decline importing a temperature column. This
column can be used to suppress dust in gas above a certain kinetic temperature, but this tutorial's example file does
not include a temperature column.

The first lines of the "eagle_gas.txt" file are:

\verbatim
# Gas particles for a simulated galaxy (pre-production EAGLE run)
# SKIRT 9 import format for a medium source using M_dust = f_dust x Z x M_gas
#
# Column 1: x-coordinate (kpc)
# Column 2: y-coordinate (kpc)
# Column 3: z-coordinate (kpc)
# Column 4: smoothing length (kpc)
# Column 5: gas mass (Msun)
# Column 6: metallicity (1)
#
85.32513 101.0889 -69.36465 55.21837 2081983 2.549941e-05
...
\endverbatim

The first three columns are the \f$x\f$, \f$y\f$ and \f$z\f$ coordinates of the gas particle, the fourth column is its
SPH smoothing length \f$h\f$, the fifth column is its mass \f$M_\mathrm{gas}\f$, and the sixth column is the
metallicity \f$Z\f$ of the gas (dimensionless fraction).

\verbatim
   Possible choices for the material type and properties throughout the medium:
      1. A typical interstellar dust mix (mean properties)
      2. A THEMIS (Jones et al. 2017) dust mix
      3. A Draine and Li (2007) dust mix
         ...
 ? Enter one of these numbers [1,7] (1): 2
 ? Enter the number of grain size bins for each of the silicate populations [1,2000000000] (5):
 ? Enter the number of grain size bins for each of the hydrocarbon populations [1,2000000000] (5):
\endverbatim

\c SKIRT includes a large set of built-in dust grain properties and dust mixtures. A dust mixture represents a
collection of a dust grains of various sizes and material types, such as for example silicate and graphite.
For the purposes of calculating absorption and scattering, the optical properties of a complete dust mixture can be
conveniently averaged over the various sub-populations, resulting in a single "representative grain", without loss
of accuracy.

However, to calculate the thermal emission of a dust mixture embedded in a given radiation field, one needs to take the
full size distribution into account. Indeed, the equilibrium temperature of the grains depends on their size as well as
on their material properties. Depending on the radiation field, small grains may even be "stochastically heated", i.e.
not in thermal equilibrium with their environment. In this case, it becomes necessary to compute the probability
distribution of the internal grain energy to determine the emission spectrum. Stochastically heated grains emit at
shorter wavelengths than if they were in equilibrium, which often substantially influences the infrared spectrum of a
galaxy.

\c SKIRT discretizes the grain size distribution for each material type in a dust mix into a number of size bins. More
bins means better accuracy. On the other hand, each bin consumes memory \em and processing time. In most cases, a
number of size bins between 10 and 15 is an acceptable compromise.

There are several built-in "turn-key" dust mixes that require very little extra configuration. For this tutorial,
select the THEMIS dust mix and leave the number of size bins for each grain type at the default value of 5, although in
an actual research setting this number should be higher.

When asked for a second medium component, enter zero to terminate the list.

\subsection TutorialHydroSphGrid Spatial grid

\verbatim
   Possible choices for the spatial grid:
      1. A Cartesian spatial grid
      2. A tree-based spatial grid
 ? Enter one of these numbers [1,2] (2): 2
 ? Enter the start point of the box in the X direction ]-∞ pc,∞ pc[: -20 kpc
 ? Enter the end point of the box in the X direction ]-∞ pc,∞ pc[: 20 kpc
 ? Enter the start point of the box in the Y direction ]-∞ pc,∞ pc[: -20 kpc
 ? Enter the end point of the box in the Y direction ]-∞ pc,∞ pc[: 20 kpc
 ? Enter the start point of the box in the Z direction ]-∞ pc,∞ pc[: -20 kpc
 ? Enter the end point of the box in the Z direction ]-∞ pc,∞ pc[: 20 kpc
   Possible choices for the tree construction policy (configuration options):
      1. A tree grid construction policy using the medium density distribution
   Automatically selected the only choice: 1
 ? Enter the minimum level of grid refinement [0,99] (3): 3
 ? Enter the maximum level of grid refinement [0,99] (7): 7
 ? Enter the maximum fraction of dust contained in each cell [0,0.01] (1e-6): 5e-5
 ? Enter the maximum fraction of electrons contained in each cell [0,0.01] (1e-6):
\endverbatim

\c SKIRT discretizes the medium on a spatial grid, i.e. a collection of small cells in which properties such as density
and radiation field are considered to be constant. Usually you have little a priori knowledge about a the spatial
distribution imported from SPH simulation results. Due to the lack of spatial symmetries, the grid must be a full 3D
grid. It is thus best to choose an adaptive grid that automatically forms smaller cells in denser regions. The grid
will take some time to construct, but the simulation run will be faster and more accurate than if you would use a
regular grid.

For this tutorial simulation, select a tree-based grid. The grid must enclose most of the dust in the system so its
size must be adjusted to the domain of the input data. For the \c eagle_xxx.txt particle data files, you should specify
a cube of 40 kpc in each direction, centered on the origin.

For this tutorial simulation, acceptable values for the grid refinement level are a minimum of 3 and a maximum of 7
(the default values). The maximum fraction of dust mass in each cell may be set to a value of \f$5\times 10^{-5}\f$.
For high-quality simulations, you will need to raise the maximum level to 10 or more, and the maximum fraction of dust
mass should be set to a smaller (and thus more stringent) value. This will result in an octtree with more and smaller
cells, increasing accuracy as well as execution time.

\subsection TutorialHydroSphInst Instrument system

\verbatim
   Possible choices for the default instrument wavelength grid:
      1. A logarithmic wavelength grid
      2. A nested logarithmic wavelength grid
         ...
 ? Enter one of these numbers [1,4] (1): 1
 ? Enter the shortest wavelength [0.0001 micron,1e6 micron]: 0.09
 ? Enter the longest wavelength [0.0001 micron,1e6 micron]: 1000
 ? Enter the number of wavelength grid points [3,2000000000] (25): 750
\endverbatim

Similar to the situation with recording the radiation field, instruments need to detect and store wavelength dependent
flux contributions in a finite number of wavelength bins. The default instrument wavelength grid defines these bins for
all instruments and for all probes that output wavelength dependent information. (When running the Q&A with a user
experience level higher than \em Basic, it is possible to assign a different wavelength grid to each instrument or
probe.)

For this tutorial, configure a logarithmic wavelength grid with a range of \f$0.09~\mu{\text{m}} <= \lambda <=
1000~\mu{\text{m}}\f$, including both the primary and secondary source wavelength ranges, and with 750 wavelength grid
points. Because you will be recording spatially integrated SEDs only for this tutorial, there is no problem with memory
use even if you would specify a substantially larger number of wavelength grid points. However, maintaining an
acceptable signal-to-nois ratio with the resulting higher wavelength resolution might necessitate a larger number of
photon packets.

\verbatim
   Possible choices for item #1 in the instruments list:
      1. A distant instrument that outputs the spatially integrated flux density as an SED
      2. A distant instrument that outputs the surface brightness in every pixel as a data cube
      3. A distant instrument that outputs both the flux density (SED) and surface brightness (data cube)
 ? Enter one of these numbers or zero to terminate the list [0,3] (1): 1
 ? Enter the name for this instrument: fo
 ? Enter the distance to the system ]0 Mpc,∞ Mpc[: 10
 ? Enter the inclination angle θ of the detector [0 deg,180 deg] (0 deg): 90
 ? Enter the azimuth angle φ of the detector [-360 deg,360 deg] (0 deg): -90
 ? Do you want to record flux components separately? [yes/no] (no): yes
   Possible choices for item #2 in the instruments list:
      1. A distant instrument that outputs the spatially integrated flux density as an SED
      2. A distant instrument that outputs the surface brightness in every pixel as a data cube
      3. A distant instrument that outputs both the flux density (SED) and surface brightness (data cube)
 ? Enter one of these numbers or zero to terminate the list [0,3] (1): 1
 ? Enter the name for this instrument: eo
 ? Enter the distance to the system ]0 Mpc,∞ Mpc[: 10
 ? Enter the inclination angle θ of the detector [0 deg,180 deg] (0 deg): 90
 ? Enter the azimuth angle φ of the detector [-360 deg,360 deg] (0 deg): 180
 ? Do you want to record flux components separately? [yes/no] (no): yes
\endverbatim

For this tutorial, configure two instruments of the type that outputs the total integrated flux as an SED. Specify
two different viewpoints corresponding to face-on and edge-on sight lines, and a distance to the system of 10 Mpc.
The galactic plane of the example galaxy in this tutorial is situated in the $xz$ coordinate plane, leading to the
following interesting set of angles:

| Instrument | Name | Inclination θ | Azimuth φ | Description
|------------|------|---------------|-----------|------------
| \#1 | eo | 90 deg | -90 deg | edge-on
| \#2 | fo | 90 deg | 180 deg | face-on

In an actual research setting you might lack information about the orientation of the imported galaxy, so that you
would need to perform one or more test simulations (or other visualizations) to find out.

When asked for a third instrument, enter zero to terminate the list.

\subsection TutorialHydroSphProbe Probe system

\verbatim
   Possible choices for item #1 in the probes list:
         ...
      4. Convergence information on the spatial grid
      6. Cuts of the media densities along the coordinate planes
         ...
 ? Enter one of these numbers or zero to terminate the list [0,10] (4): 4
\endverbatim

Configure the following probes, in arbitrary order, and specify their names as follows.

| Probe type | Probe name
|------------|-----------
| Convergence information on the spatial grid                         | cnv
| Cuts of the media densities along the coordinate planes             | dns
| Cuts of the indicative dust temperature along the coordinate planes | tmp


\section TutorialHydroSphAdjust Adjusting the configuration file

\c SKIRT includes two distinct algorithms to calculate the thermal dust emission spectrum. The basic method, called
"Equilibrium" emission, assumes that all dust grains are in local thermal equilibrium (LTE) with the surrounding
radiation field. While this method is fast, it does not produce realistic results in many cases because the LTE
assumption is often not justified for smaller dust grains. The more advanced method, called "Stochastic" emission or
non-LTE, calculates a temperature probability distribution for those smaller grains instead of assuming a single
equilibrium temperature. This is a lot more resource-intensive but produces much more realistic results for the near-
and mid-infrared wavelengths.

With the Q&A set to the \em Basic user experience level (see \ref TutorialHydroSphLev), the configuration automatically
defaults to the basic equilibrium method. Adjusting the configuration to use stochastic heating can be easily accomplished
by opening the \em ski file in a text editor. Locate the line that starts as follows:

\verbatim
<DustEmissionOptions dustEmissionType="Stochastic" storeEmissionRadiationField="false" ...>
\endverbatim

Replace the word "Equilibrium" by "Stochastic" (with that exact capitalization), and save the adjusted file.


\section TutorialHydroSphPerform Performing the simulation

\subsection TutorialHydroSphRun The simulation

After all questions have been answered, \c SKIRT writes out the resulting ski file and quits. Start \c SKIRT again,
this time specifying the name of the new \em ski file on the command line, to actually perform the simulation. If the
input data files are not in your current directory, you can specify the input directory on the \c SKIRT command line.
For example:

\verbatim
skirt -i ../in PanEagle
\endverbatim

\subsection TutorialHydroSphOutput Output files

\image html TutorialHydroSPHSED1.png
\image html TutorialHydroSPHSED2.png


<b><i>Congratulations, you made it to the end of this tutorial!</i></b>

*/

pts plot_temperature_cuts . --prefix=PanEagle
pts plot_density_cuts . --prefix=PanEagle

pts plot_seds . --prefix=PanEagle --dex=4
pts plot_seds . --prefix=PanEagle --instr=fo --wmin=0.1 --wmax=50 --dex=3
pts plot_seds . --prefix=PanEagle --instr=eo --wmin=0.1 --wmax=50 --dex=3
