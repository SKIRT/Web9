<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.9.5" doxygen_gitid="2f6875a5ca481a69a6f32650c77a667f87d25e88">
  <compound kind="class">
    <name>pts::band::broadband::BroadBand</name>
    <filename>classpts_1_1band_1_1broadband_1_1_broad_band.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classpts_1_1band_1_1broadband_1_1_broad_band.html</anchorfile>
      <anchor>a12c3e6a5441738bcad61b4f3c96d4d90</anchor>
      <arglist>(self, bandspec)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>builtinBandNames</name>
      <anchorfile>classpts_1_1band_1_1broadband_1_1_broad_band.html</anchorfile>
      <anchor>a7b786357c76e908dd9cfa092ca497ea5</anchor>
      <arglist>(cls)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convolve</name>
      <anchorfile>classpts_1_1band_1_1broadband_1_1_broad_band.html</anchorfile>
      <anchor>a77b6c930cef733c755a6992fece79749</anchor>
      <arglist>(self, wavelengths, fluxes, *numWavelengths=None, flavor=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>effectiveWidth</name>
      <anchorfile>classpts_1_1band_1_1broadband_1_1_broad_band.html</anchorfile>
      <anchor>a7e5e583c8070c51db8c41a82b53873db</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>maxWavelength</name>
      <anchorfile>classpts_1_1band_1_1broadband_1_1_broad_band.html</anchorfile>
      <anchor>a7984cf25e31d262354da8f73d3403a50</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>minWavelength</name>
      <anchorfile>classpts_1_1band_1_1broadband_1_1_broad_band.html</anchorfile>
      <anchor>a7266c1b719493441e0a19ad101c2bc8d</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>name</name>
      <anchorfile>classpts_1_1band_1_1broadband_1_1_broad_band.html</anchorfile>
      <anchor>a1ea720a0c70520b58e680e2b15f0883f</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>pivotWavelength</name>
      <anchorfile>classpts_1_1band_1_1broadband_1_1_broad_band.html</anchorfile>
      <anchor>ae7bf878a68e37185c056f3527159ecff</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>transmissionCurve</name>
      <anchorfile>classpts_1_1band_1_1broadband_1_1_broad_band.html</anchorfile>
      <anchor>a824ca89d7fe07a2f4e95a733d1d62571</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>wavelengthRange</name>
      <anchorfile>classpts_1_1band_1_1broadband_1_1_broad_band.html</anchorfile>
      <anchor>a3e0c5f2cb7c9a4913ac83e05679b4b3b</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_bandNameFromSpec</name>
      <anchorfile>classpts_1_1band_1_1broadband_1_1_broad_band.html</anchorfile>
      <anchor>a7444c18789b99332db4fce1865432175</anchor>
      <arglist>(self, bandspec)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_loadALMA</name>
      <anchorfile>classpts_1_1band_1_1broadband_1_1_broad_band.html</anchorfile>
      <anchor>aca16e8621531ec08b8d57fb3780b0734</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_loadEUCLID</name>
      <anchorfile>classpts_1_1band_1_1broadband_1_1_broad_band.html</anchorfile>
      <anchor>a6bce8c5653efb38ead3e2ff3d9a343f5</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_loadJCMT</name>
      <anchorfile>classpts_1_1band_1_1broadband_1_1_broad_band.html</anchorfile>
      <anchor>a0853c88351ac2d0ca7c132dff9d96837</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_loadPLANCK</name>
      <anchorfile>classpts_1_1band_1_1broadband_1_1_broad_band.html</anchorfile>
      <anchor>abe1fa7a355b6d0a9136894cce6e5b9fa</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_loadSVO</name>
      <anchorfile>classpts_1_1band_1_1broadband_1_1_broad_band.html</anchorfile>
      <anchor>a95eca841f38fa5f08d639991928fcc04</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_normalize</name>
      <anchorfile>classpts_1_1band_1_1broadband_1_1_broad_band.html</anchorfile>
      <anchor>a9a83054dfc0a424aa14ca94a7186c5d8</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>dictionary</type>
      <name>_bandinfo</name>
      <anchorfile>classpts_1_1band_1_1broadband_1_1_broad_band.html</anchorfile>
      <anchor>a28c97cafd8628bfaa9bc9b20957cac88</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pts::do::command::ArgumentParserError</name>
    <filename>classpts_1_1do_1_1command_1_1_argument_parser_error.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classpts_1_1do_1_1command_1_1_argument_parser_error.html</anchorfile>
      <anchor>aff611739629028f6a999a6729a63ae00</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pts::do::command::CommandScript</name>
    <filename>classpts_1_1do_1_1command_1_1_command_script.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classpts_1_1do_1_1command_1_1_command_script.html</anchorfile>
      <anchor>a4e8584771dd7173167b78a3b0c6ff8ba</anchor>
      <arglist>(self, packagename, scriptname)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>description</name>
      <anchorfile>classpts_1_1do_1_1command_1_1_command_script.html</anchorfile>
      <anchor>a6cedf019c5aee503ef51791dac4282a6</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>doWithCommandLineArguments</name>
      <anchorfile>classpts_1_1do_1_1command_1_1_command_script.html</anchorfile>
      <anchor>aad37bc205e0896e4023910114928dfe0</anchor>
      <arglist>(self, arguments=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>name</name>
      <anchorfile>classpts_1_1do_1_1command_1_1_command_script.html</anchorfile>
      <anchor>a050307174f20c60fe8a196be30b23798</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pts::do::command::LoggingArgumentParser</name>
    <filename>classpts_1_1do_1_1command_1_1_logging_argument_parser.html</filename>
  </compound>
  <compound kind="class">
    <name>pts::simulation::healpix::HEALPixGrid</name>
    <filename>classpts_1_1simulation_1_1healpix_1_1_h_e_a_l_pix_grid.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classpts_1_1simulation_1_1healpix_1_1_h_e_a_l_pix_grid.html</anchorfile>
      <anchor>a4029b3886d5bef2778d6f44eea684b0f</anchor>
      <arglist>(self, HEALPixCube)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>degrade</name>
      <anchorfile>classpts_1_1simulation_1_1healpix_1_1_h_e_a_l_pix_grid.html</anchorfile>
      <anchor>a5549ea888fc62c7bb02a5c01d049f8b8</anchor>
      <arglist>(self, degradeFactor, operator=np.sum)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getAnnulusAroundPixel</name>
      <anchorfile>classpts_1_1simulation_1_1healpix_1_1_h_e_a_l_pix_grid.html</anchorfile>
      <anchor>af806e3e6e9db5c42bf5f546a8137395e</anchor>
      <arglist>(self, centralPixel, innerRadius, outerRadius, useTree=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getHEALPixAngles</name>
      <anchorfile>classpts_1_1simulation_1_1healpix_1_1_h_e_a_l_pix_grid.html</anchorfile>
      <anchor>ac0e110fcba3c3e929fb5ab5d2837e896</anchor>
      <arglist>(self, j, i)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getHEALPixIndices</name>
      <anchorfile>classpts_1_1simulation_1_1healpix_1_1_h_e_a_l_pix_grid.html</anchorfile>
      <anchor>a886c9cf1387cf99658e8a01ec18399b0</anchor>
      <arglist>(self, theta, phi)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getKDTree</name>
      <anchorfile>classpts_1_1simulation_1_1healpix_1_1_h_e_a_l_pix_grid.html</anchorfile>
      <anchor>ac7b720e1d892eda0b7faff9249a3826f</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getPixel</name>
      <anchorfile>classpts_1_1simulation_1_1healpix_1_1_h_e_a_l_pix_grid.html</anchorfile>
      <anchor>ac5c58baad9ea4433b705ee661d3b08ee</anchor>
      <arglist>(self, j, i)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getPixelAngles</name>
      <anchorfile>classpts_1_1simulation_1_1healpix_1_1_h_e_a_l_pix_grid.html</anchorfile>
      <anchor>ac5ef25d769dba8a81a8c7092a3d0325e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getPixelFromRINGIndex</name>
      <anchorfile>classpts_1_1simulation_1_1healpix_1_1_h_e_a_l_pix_grid.html</anchorfile>
      <anchor>af0bb6681111e18fafde83a7d28f09492</anchor>
      <arglist>(self, index)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getPixelIndices</name>
      <anchorfile>classpts_1_1simulation_1_1healpix_1_1_h_e_a_l_pix_grid.html</anchorfile>
      <anchor>ace21e6cea4d945f4bf1f72237f56473a</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getPositions</name>
      <anchorfile>classpts_1_1simulation_1_1healpix_1_1_h_e_a_l_pix_grid.html</anchorfile>
      <anchor>a55be90787cb14ad48c7d2482a958cf3d</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getProjectionMap</name>
      <anchorfile>classpts_1_1simulation_1_1healpix_1_1_h_e_a_l_pix_grid.html</anchorfile>
      <anchor>a5a2aef7a55909be19b24cf74df442d76</anchor>
      <arglist>(self, nPixelY, projection=&quot;Mollweide&quot;, thetaCenter=0.0, phiCenter=0.0)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getRINGIndex</name>
      <anchorfile>classpts_1_1simulation_1_1healpix_1_1_h_e_a_l_pix_grid.html</anchorfile>
      <anchor>a8808769d9088d0099d3ba5926ff353eb</anchor>
      <arglist>(self, theta, phi)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>printInfo</name>
      <anchorfile>classpts_1_1simulation_1_1healpix_1_1_h_e_a_l_pix_grid.html</anchorfile>
      <anchor>a0ee2d2cffc50de3744b4afe49d475c9f</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pts::simulation::simulation::_SimulationEntity</name>
    <filename>classpts_1_1simulation_1_1simulation_1_1___simulation_entity.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1___simulation_entity.html</anchorfile>
      <anchor>a792cece2d96aaa86ef0ff207b6a76a3c</anchor>
      <arglist>(self, simulation, xpath)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getBoolAttribute</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1___simulation_entity.html</anchorfile>
      <anchor>ac5f09edd5d62ccfe63754735d4ff3523</anchor>
      <arglist>(self, attribute)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getFloatAttribute</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1___simulation_entity.html</anchorfile>
      <anchor>ac15d3bf9515766e613bd1b61d11088f2</anchor>
      <arglist>(self, attribute)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getIntAttribute</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1___simulation_entity.html</anchorfile>
      <anchor>ac0c9c162e211f9f1dda4c2c6066fe358</anchor>
      <arglist>(self, attribute)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getQuantityAttribute</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1___simulation_entity.html</anchorfile>
      <anchor>aba58b4f0854df0ac522eadd796b7ee21</anchor>
      <arglist>(self, attribute)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getQuantityListAttribute</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1___simulation_entity.html</anchorfile>
      <anchor>af5b4415e52344ceae65f79d313d346b4</anchor>
      <arglist>(self, attribute)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getStringAttribute</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1___simulation_entity.html</anchorfile>
      <anchor>acc362c5427206c309c7e22a96767016b</anchor>
      <arglist>(self, attribute)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>outFilePaths</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1___simulation_entity.html</anchorfile>
      <anchor>a0aac6da2e34617f7e5f4aa2f0b5f9546</anchor>
      <arglist>(self, fileType=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>prefix</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1___simulation_entity.html</anchorfile>
      <anchor>a4cec2d13ed4886c828905db27421c267</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>type</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1___simulation_entity.html</anchorfile>
      <anchor>a08d8fad095b203065b848568300ac063</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>wavelengthBinWidths</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1___simulation_entity.html</anchorfile>
      <anchor>a31b7b9adf1358b9ddaf84a933b9717e6</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>wavelengthIndices</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1___simulation_entity.html</anchorfile>
      <anchor>a4ee575362bbd900adc099d9fdb58a948</anchor>
      <arglist>(self, wavelengths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>wavelengths</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1___simulation_entity.html</anchorfile>
      <anchor>aea35ba2d92416ddf22e7aa85ee9890be</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pts::simulation::simulation::Instrument</name>
    <filename>classpts_1_1simulation_1_1simulation_1_1_instrument.html</filename>
    <base>pts::simulation::simulation::_SimulationEntity</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_instrument.html</anchorfile>
      <anchor>a73e5e4aaf555db100d2c36e25ccfb331</anchor>
      <arglist>(self, simulation, index)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>distance</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_instrument.html</anchorfile>
      <anchor>a34d6b972a19694a7486231eb976f2cac</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>name</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_instrument.html</anchorfile>
      <anchor>ab76a543dba0ab9a0dc43ec1791af28aa</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pts::simulation::simulation::Probe</name>
    <filename>classpts_1_1simulation_1_1simulation_1_1_probe.html</filename>
    <base>pts::simulation::simulation::_SimulationEntity</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_probe.html</anchorfile>
      <anchor>a824dc505bc218737ca063ee8d45370c4</anchor>
      <arglist>(self, simulation, index)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>formType</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_probe.html</anchorfile>
      <anchor>a0d987ec4c05921e47c21318467e353f3</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>name</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_probe.html</anchorfile>
      <anchor>af01856ec62d5869c02eb9994e195b4ce</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pts::simulation::simulation::Simulation</name>
    <filename>classpts_1_1simulation_1_1simulation_1_1_simulation.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_simulation.html</anchorfile>
      <anchor>ad95dee6467adb4feba41ba0d9ea04523</anchor>
      <arglist>(self, prefix=&quot;&quot;, *skiFilePath=None, inDirPath=None, outDirPath=&quot;&quot;, process=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__getattr__</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_simulation.html</anchorfile>
      <anchor>a6abb311f6c1bb9632e9d0102ea094537</anchor>
      <arglist>(self, attrname)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>inDirPath</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_simulation.html</anchorfile>
      <anchor>abc290e291c7ceb794cc9314f54de4c7e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>inFilePath</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_simulation.html</anchorfile>
      <anchor>a78f5126ba725efb16329b1717acda04c</anchor>
      <arglist>(self, name)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>instruments</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_simulation.html</anchorfile>
      <anchor>a041d84b2752cb32ab03377d545ee748a</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>isRunning</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_simulation.html</anchorfile>
      <anchor>a4047ae01815cf79058a942fe39d018c7</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>logFilePath</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_simulation.html</anchorfile>
      <anchor>acda29b45550cb98b63d79e65cac597ce</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>logFilePaths</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_simulation.html</anchorfile>
      <anchor>aa48435f66c74cd18ff4a9d6cbf0b637d</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>outDirPath</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_simulation.html</anchorfile>
      <anchor>adc3dfc4a3e25d2ef5b2cd19a219d7107</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>outFilePath</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_simulation.html</anchorfile>
      <anchor>a23656e5210f9fff012ef0c0745d8a98e</anchor>
      <arglist>(self, partialname)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>parameters</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_simulation.html</anchorfile>
      <anchor>aa208e5e4a7239803a1c1d7adbce40f15</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>prefix</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_simulation.html</anchorfile>
      <anchor>a172d92ae525f9df73f71a1a1ee9db4ef</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>probes</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_simulation.html</anchorfile>
      <anchor>ade34d64f5f9de16d18b2145d03e962fa</anchor>
      <arglist>(self, probeType=None, formType=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>skiFilePath</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_simulation.html</anchorfile>
      <anchor>a2ed24304a0d68e886730652f372ea4f9</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>status</name>
      <anchorfile>classpts_1_1simulation_1_1simulation_1_1_simulation.html</anchorfile>
      <anchor>a2b320271565f822b8da808782f712a51</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pts::simulation::skifile::SkiFile</name>
    <filename>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>a9181b46d4c7fad1d9bb28e8e043bc982</anchor>
      <arglist>(self, skiFilePath)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getBoolAttribute</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>ab732ab6d8e9ff5cc91d9df9b5cef201d</anchor>
      <arglist>(self, xpath, attribute)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getFloatAttribute</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>a80190635a13b5902dca8601aa850684d</anchor>
      <arglist>(self, xpath, attribute)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getIntAttribute</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>adf1022e48741e33666797e249a0105c5</anchor>
      <arglist>(self, xpath, attribute)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getQuantityAttribute</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>a3cc76f47167d1c9e6532a62f9e016870</anchor>
      <arglist>(self, xpath, attribute)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getQuantityListAttribute</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>ab10449694d4f6b60afc132b1e8813966</anchor>
      <arglist>(self, xpath, attribute)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getStringAttribute</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>a901cca295ea41f34e7c5597f2eb43603</anchor>
      <arglist>(self, xpath, attribute)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getStringAttributes</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>a8bb406605f8f1afc46261b8a9f8bb4d3</anchor>
      <arglist>(self, xpath, attribute)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>instrumentNames</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>ae4ab5dc35fa397d57b278549bdb56cde</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>isOligo</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>a6eb9d27182d1f1dce11a95a7053fa9d6</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>numPrimaryPackets</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>a87debec54d4915b5b8d7db7599a92048</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>probeNames</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>a1639059559ef14ae1a45911f549c5213</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>saveTo</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>a44d11993077d35e4e052bff618511c17</anchor>
      <arglist>(self, saveFilePath)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setBoolAttribute</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>a3f8051b42405a450b63c3f771185bbe3</anchor>
      <arglist>(self, xpath, attribute, value)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setFloatAttribute</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>a3bd98a61d418e24e6368c75c8eca2605</anchor>
      <arglist>(self, xpath, attribute, value)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setIntAttribute</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>ac929125885ec331744af399c5d11579b</anchor>
      <arglist>(self, xpath, attribute, value)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setNumPrimaryPackets</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>adef81fc383579b467a66493aa68682ae</anchor>
      <arglist>(self, value)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setQuantityAttribute</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>a44dcb67f2546b1a38005fb0cce86f9a3</anchor>
      <arglist>(self, xpath, attribute, value, skirtUnit=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setStringAttribute</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>ac4568d7fba6b97e87c5a0d679f7cc1cc</anchor>
      <arglist>(self, xpath, attribute, value)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>skiFilePath</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>aed8e9f3948ce26ff7f96ece563c81539</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>transformIf</name>
      <anchorfile>classpts_1_1simulation_1_1skifile_1_1_ski_file.html</anchorfile>
      <anchor>a4bc34d8e9f76a44d3062d91f6f57cdcc</anchor>
      <arglist>(self, condition, templates)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pts::simulation::skirt::Skirt</name>
    <filename>classpts_1_1simulation_1_1skirt_1_1_skirt.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classpts_1_1simulation_1_1skirt_1_1_skirt.html</anchorfile>
      <anchor>a66c9539153b6c3f513442d37f931e2ba</anchor>
      <arglist>(self, path=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>execute</name>
      <anchorfile>classpts_1_1simulation_1_1skirt_1_1_skirt.html</anchorfile>
      <anchor>a8087ed18f96a6a276f507f306aa0c267</anchor>
      <arglist>(self, skiFilePath, *inDirPath=&quot;&quot;, outDirPath=&quot;&quot;, skiRelative=False, numThreadsPerProcess=0, numProcesses=1, verbose=False, wait=True, console=&apos;regular&apos;)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>isRunning</name>
      <anchorfile>classpts_1_1simulation_1_1skirt_1_1_skirt.html</anchorfile>
      <anchor>a497eb70395ba3603e794e94d03f23812</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>path</name>
      <anchorfile>classpts_1_1simulation_1_1skirt_1_1_skirt.html</anchorfile>
      <anchor>aa369ed56d9bd559a286ab901dd97d6b5</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>version</name>
      <anchorfile>classpts_1_1simulation_1_1skirt_1_1_skirt.html</anchorfile>
      <anchor>a15d852f70c3e28c3c7a51afe3dba2ee6</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pts::storedtable::conversionspec::ConversionSpec</name>
    <filename>classpts_1_1storedtable_1_1conversionspec_1_1_conversion_spec.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classpts_1_1storedtable_1_1conversionspec_1_1_conversion_spec.html</anchorfile>
      <anchor>a469894c9c2c71a51cc4c402617903a08</anchor>
      <arglist>(self, inputPath, outputPath)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>perform</name>
      <anchorfile>classpts_1_1storedtable_1_1conversionspec_1_1_conversion_spec.html</anchorfile>
      <anchor>abef950b156ea5f7dad178a3814255f42</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pts::storedtable::conversionspec::ConversionSpecs</name>
    <filename>classpts_1_1storedtable_1_1conversionspec_1_1_conversion_specs.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classpts_1_1storedtable_1_1conversionspec_1_1_conversion_specs.html</anchorfile>
      <anchor>afb87f6da7a8528764469bb9610042d51</anchor>
      <arglist>(self, name)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add</name>
      <anchorfile>classpts_1_1storedtable_1_1conversionspec_1_1_conversion_specs.html</anchorfile>
      <anchor>a4adb581b6b5f02bae8bd7e694b5db7c0</anchor>
      <arglist>(self, spec)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>perform</name>
      <anchorfile>classpts_1_1storedtable_1_1conversionspec_1_1_conversion_specs.html</anchorfile>
      <anchor>aacdfce30c31d6b7943b46768f6e252fb</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pts::storedtable::tokenizedfile::TokenizedFile</name>
    <filename>classpts_1_1storedtable_1_1tokenizedfile_1_1_tokenized_file.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classpts_1_1storedtable_1_1tokenizedfile_1_1_tokenized_file.html</anchorfile>
      <anchor>a0920028d6b4a61e30fcb216dac8e6ba1</anchor>
      <arglist>(self, file)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>next</name>
      <anchorfile>classpts_1_1storedtable_1_1tokenizedfile_1_1_tokenized_file.html</anchorfile>
      <anchor>aa70daee65270262833871a035c7feb51</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>skipHeaderLines</name>
      <anchorfile>classpts_1_1storedtable_1_1tokenizedfile_1_1_tokenized_file.html</anchorfile>
      <anchor>a2c81e4e39989fcbf39844e11f9d16d16</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>skipLine</name>
      <anchorfile>classpts_1_1storedtable_1_1tokenizedfile_1_1_tokenized_file.html</anchorfile>
      <anchor>a6606687cdec31b03e4dae6af95ec0337</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>skipToEndOfLine</name>
      <anchorfile>classpts_1_1storedtable_1_1tokenizedfile_1_1_tokenized_file.html</anchorfile>
      <anchor>a70b52c94e872419409da45af1f636085</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pts::test::functional::SkirtTestSuite</name>
    <filename>classpts_1_1test_1_1functional_1_1_skirt_test_suite.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classpts_1_1test_1_1functional_1_1_skirt_test_suite.html</anchorfile>
      <anchor>a1534034832367cf1d1e0d378fe36024f</anchor>
      <arglist>(self, subSuite=&quot;.&quot;, *suitePath=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>clean</name>
      <anchorfile>classpts_1_1test_1_1functional_1_1_skirt_test_suite.html</anchorfile>
      <anchor>a5c9d5772164234a38fedea2d54f3ef61</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>endorse</name>
      <anchorfile>classpts_1_1test_1_1functional_1_1_skirt_test_suite.html</anchorfile>
      <anchor>aa5a12bb0becbf08bece7aa6fa20a441b</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>perform</name>
      <anchorfile>classpts_1_1test_1_1functional_1_1_skirt_test_suite.html</anchorfile>
      <anchor>abac84153886022759673fcb3176ec782</anchor>
      <arglist>(self, *skirtPath=None, visual=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>size</name>
      <anchorfile>classpts_1_1test_1_1functional_1_1_skirt_test_suite.html</anchorfile>
      <anchor>aff30ab16383abe878d82dd061e259b83</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>skiPaths</name>
      <anchorfile>classpts_1_1test_1_1functional_1_1_skirt_test_suite.html</anchorfile>
      <anchor>acce5881e6c7b34ea4eb22b7b2005c66c</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pts::utils::error::UserError</name>
    <filename>classpts_1_1utils_1_1error_1_1_user_error.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classpts_1_1utils_1_1error_1_1_user_error.html</anchorfile>
      <anchor>a85b23470811ddd4faaaf4b39eb034eab</anchor>
      <arglist>(self, message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pts::visual::moviefile::MovieFile</name>
    <filename>classpts_1_1visual_1_1moviefile_1_1_movie_file.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classpts_1_1visual_1_1moviefile_1_1_movie_file.html</anchorfile>
      <anchor>a128ad99da417522e2036810585a35c3e</anchor>
      <arglist>(self, outFilePath, shape=(800, 600), rate=24)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pts::visual::rgbimage::_CubicSpline</name>
    <filename>classpts_1_1visual_1_1rgbimage_1_1___cubic_spline.html</filename>
  </compound>
  <compound kind="class">
    <name>pts::visual::rgbimage::RGBImage</name>
    <filename>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>ae3a36e46ae07e2d42a8e03c65e0d3487</anchor>
      <arglist>(self, source, frameIndices=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addBelow</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>a2d45ad9f86d56816304f0000ef0df93c</anchor>
      <arglist>(self, image)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addRight</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>a3f247a1895b02c156daca13295042af5</anchor>
      <arglist>(self, image)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>applyColorMap</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>a45678584be7244fb9c9d8295e37d3c7f</anchor>
      <arglist>(self, cmap)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>applyCurve</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>a7fda63ee99b5973cd6eb99eac287985b</anchor>
      <arglist>(self, point1=(0.25, 0.16), point2=(0.80, 0.86))</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>applyLog</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>ae9dd2f346504da3aab21897a4254274d</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>applySqrt</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>aa1989aa06eb7431ab23186c181c8fc75</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>bytesArray</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>aa62dddcf24e0c71fc0ff21c9059b6b74</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>enlargeCanvas</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>a9c94419bdc6189c72351b669bb14175b</anchor>
      <arglist>(self, shape)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>percentilePixelRange</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>ad75cd1cb4e9c6b1ce794fd3dd09286be</anchor>
      <arglist>(self, from_percentile=0, to_percentile=100)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>pixelArray</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>aa037b66638551f237966c89941036fb3</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>pixelRange</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>aca232e02baab0a827b04a55f27a31381</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>plot</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>ac30cd2987c7c200326a1c0edff3c7956</anchor>
      <arglist>(self, fill=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>saveTo</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>a8cb8407446562eaac71cb73c5f1fc227</anchor>
      <arglist>(self, outFilePath, tiff16bit=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>scaledPixelArray</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>a8beab2c58465873357f812c0da54428e</anchor>
      <arglist>(self, newmin, newmax)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>scaleValues</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>a5e2d7402c560c52da9a2734acd355842</anchor>
      <arglist>(self, newmin, newmax)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setRange</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>ae10432944b9181507865b9915cd73399</anchor>
      <arglist>(self, newmin=None, newmax=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>shape</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>a1b05a4475415d8e5eb493a51084c14ce</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_ensureArr</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>a0af5251ec617ca6432ce3c94cc97830a</anchor>
      <arglist>(self, invalidate=True)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_ensureBuf</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>ae6dd0547ca5418fde999420f26bcc5bb</anchor>
      <arglist>(self, invalidate=True)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_ensurePil</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>a991ce0d34057ef51b0d0b2e08a86584b</anchor>
      <arglist>(self, invalidate=True)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_setArr</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>ac2d673b8b85c0f0293b750d222486336</anchor>
      <arglist>(self, arr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_setBuf</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>aca5450f5311154f87fc1e2ff13465f0a</anchor>
      <arglist>(self, buf)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_setPil</name>
      <anchorfile>classpts_1_1visual_1_1rgbimage_1_1_r_g_b_image.html</anchorfile>
      <anchor>a2da2d617e410e268edb871084a110917</anchor>
      <arglist>(self, pil)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts</name>
    <filename>namespacepts.html</filename>
    <namespace>pts::admin</namespace>
    <namespace>pts::band</namespace>
    <namespace>pts::do</namespace>
    <namespace>pts::simulation</namespace>
    <namespace>pts::skiupgrade</namespace>
    <namespace>pts::storedtable</namespace>
    <namespace>pts::test</namespace>
    <namespace>pts::utils</namespace>
    <namespace>pts::visual</namespace>
  </compound>
  <compound kind="namespace">
    <name>pts::admin</name>
    <filename>namespacepts_1_1admin.html</filename>
    <namespace>pts::admin::do</namespace>
  </compound>
  <compound kind="namespace">
    <name>pts::admin::do</name>
    <filename>namespacepts_1_1admin_1_1do.html</filename>
    <namespace>pts::admin::do::create_backup</namespace>
    <namespace>pts::admin::do::create_resource_archives</namespace>
    <namespace>pts::admin::do::list_commands</namespace>
    <namespace>pts::admin::do::list_dependencies</namespace>
    <namespace>pts::admin::do::remove_pyc</namespace>
    <namespace>pts::admin::do::try_do</namespace>
  </compound>
  <compound kind="namespace">
    <name>pts::admin::do::create_backup</name>
    <filename>namespacepts_1_1admin_1_1do_1_1create__backup.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::admin::do::create_resource_archives</name>
    <filename>namespacepts_1_1admin_1_1do_1_1create__resource__archives.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::admin::do::list_commands</name>
    <filename>namespacepts_1_1admin_1_1do_1_1list__commands.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::admin::do::list_dependencies</name>
    <filename>namespacepts_1_1admin_1_1do_1_1list__dependencies.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::admin::do::remove_pyc</name>
    <filename>namespacepts_1_1admin_1_1do_1_1remove__pyc.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::admin::do::try_do</name>
    <filename>namespacepts_1_1admin_1_1do_1_1try__do.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::band</name>
    <filename>namespacepts_1_1band.html</filename>
    <namespace>pts::band::broadband</namespace>
    <namespace>pts::band::do</namespace>
  </compound>
  <compound kind="namespace">
    <name>pts::band::broadband</name>
    <filename>namespacepts_1_1band_1_1broadband.html</filename>
    <class kind="class">pts::band::broadband::BroadBand</class>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_log</name>
      <anchorfile>namespacepts_1_1band_1_1broadband.html</anchorfile>
      <anchor>a19e23af4ad4cfc67c636e88b5802f97b</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>builtinBandNames</name>
      <anchorfile>namespacepts_1_1band_1_1broadband.html</anchorfile>
      <anchor>abcdea83713c74a8957c1e73aaa3eaa44</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::band::do</name>
    <filename>namespacepts_1_1band_1_1do.html</filename>
    <namespace>pts::band::do::list_bands</namespace>
  </compound>
  <compound kind="namespace">
    <name>pts::band::do::list_bands</name>
    <filename>namespacepts_1_1band_1_1do_1_1list__bands.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::do</name>
    <filename>namespacepts_1_1do.html</filename>
    <namespace>pts::do::__main__</namespace>
    <namespace>pts::do::command</namespace>
    <namespace>pts::do::initialize</namespace>
    <namespace>pts::do::prompt</namespace>
  </compound>
  <compound kind="namespace">
    <name>pts::do::__main__</name>
    <filename>namespacepts_1_1do_1_1____main____.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::do::command</name>
    <filename>namespacepts_1_1do_1_1command.html</filename>
    <class kind="class">pts::do::command::ArgumentParserError</class>
    <class kind="class">pts::do::command::CommandScript</class>
    <class kind="class">pts::do::command::LoggingArgumentParser</class>
    <member kind="function">
      <type>def</type>
      <name>doWithCommandLineArguments</name>
      <anchorfile>namespacepts_1_1do_1_1command.html</anchorfile>
      <anchor>a372d95d54742d2d26df8c017383ffedf</anchor>
      <arglist>(arguments=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>listCommands</name>
      <anchorfile>namespacepts_1_1do_1_1command.html</anchorfile>
      <anchor>ab46785bcad85bcbdab0a3ccc09b2d3da</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::do::initialize</name>
    <filename>namespacepts_1_1do_1_1initialize.html</filename>
    <member kind="function">
      <type>def</type>
      <name>initializePTS</name>
      <anchorfile>namespacepts_1_1do_1_1initialize.html</anchorfile>
      <anchor>a5be2c7e8cc93de5bb29048d9c0a14c38</anchor>
      <arglist>(prompt=False)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::do::prompt</name>
    <filename>namespacepts_1_1do_1_1prompt.html</filename>
    <member kind="function">
      <type>def</type>
      <name>do</name>
      <anchorfile>namespacepts_1_1do_1_1prompt.html</anchorfile>
      <anchor>a91e417d829f43fe718eb56ea4ea63b9d</anchor>
      <arglist>(commandline)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::simulation</name>
    <filename>namespacepts_1_1simulation.html</filename>
    <namespace>pts::simulation::fits</namespace>
    <namespace>pts::simulation::healpix</namespace>
    <namespace>pts::simulation::simulation</namespace>
    <namespace>pts::simulation::skifile</namespace>
    <namespace>pts::simulation::skirt</namespace>
    <namespace>pts::simulation::text</namespace>
    <namespace>pts::simulation::units</namespace>
  </compound>
  <compound kind="namespace">
    <name>pts::simulation::do::convert_healpix</name>
    <filename>namespacepts_1_1simulation_1_1do_1_1convert__healpix.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::simulation::do::healpix_to_planck</name>
    <filename>namespacepts_1_1simulation_1_1do_1_1healpix__to__planck.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::simulation::fits</name>
    <filename>namespacepts_1_1simulation_1_1fits.html</filename>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_grid</name>
      <anchorfile>namespacepts_1_1simulation_1_1fits.html</anchorfile>
      <anchor>a5ffa4f907ea69c06ec2b340d5e878ca7</anchor>
      <arglist>(npix, crpix, crval, cdelt, cunit)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getFitsAxes</name>
      <anchorfile>namespacepts_1_1simulation_1_1fits.html</anchorfile>
      <anchor>a546401f49d8fd17f2dd678757aae728d</anchor>
      <arglist>(path)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>loadFits</name>
      <anchorfile>namespacepts_1_1simulation_1_1fits.html</anchorfile>
      <anchor>ab6d5b63e849cde88eb27140c4856471e</anchor>
      <arglist>(path)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::simulation::healpix</name>
    <filename>namespacepts_1_1simulation_1_1healpix.html</filename>
    <class kind="class">pts::simulation::healpix::HEALPixGrid</class>
    <member kind="function">
      <type>def</type>
      <name>getDistanceOnSky</name>
      <anchorfile>namespacepts_1_1simulation_1_1healpix.html</anchorfile>
      <anchor>a7351cdb1caa74d5e1faa11ccb0caa2ef</anchor>
      <arglist>(thetaA, phiA, thetaB, phiB)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getEmptyHEALPixGrid</name>
      <anchorfile>namespacepts_1_1simulation_1_1healpix.html</anchorfile>
      <anchor>af3819020cb32a375f2e7c80f4dc75d6a</anchor>
      <arglist>(order, numValuesPerPixel=1)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::simulation::simulation</name>
    <filename>namespacepts_1_1simulation_1_1simulation.html</filename>
    <class kind="class">pts::simulation::simulation::_SimulationEntity</class>
    <class kind="class">pts::simulation::simulation::Instrument</class>
    <class kind="class">pts::simulation::simulation::Probe</class>
    <class kind="class">pts::simulation::simulation::Simulation</class>
    <member kind="function">
      <type>def</type>
      <name>createSimulation</name>
      <anchorfile>namespacepts_1_1simulation_1_1simulation.html</anchorfile>
      <anchor>a327b8310246e4c9511924e31a494f44c</anchor>
      <arglist>(outDirPath=&quot;&quot;, prefix=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createSimulations</name>
      <anchorfile>namespacepts_1_1simulation_1_1simulation.html</anchorfile>
      <anchor>adc8ba358794aa5eca4194a1af7779588</anchor>
      <arglist>(outDirPath=&quot;&quot;, prefix=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>instrumentOutFilePaths</name>
      <anchorfile>namespacepts_1_1simulation_1_1simulation.html</anchorfile>
      <anchor>ae2d5adcf367d2eff57ed3707590d9dbe</anchor>
      <arglist>(entities, fileType=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>probeOutFilePaths</name>
      <anchorfile>namespacepts_1_1simulation_1_1simulation.html</anchorfile>
      <anchor>a3970d685e41574eeed85abbb6543015b</anchor>
      <arglist>(entities, fileType=None)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::simulation::skifile</name>
    <filename>namespacepts_1_1simulation_1_1skifile.html</filename>
    <class kind="class">pts::simulation::skifile::SkiFile</class>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_prettyStringForFloat</name>
      <anchorfile>namespacepts_1_1simulation_1_1skifile.html</anchorfile>
      <anchor>a7dede21a734d0d6c0966aa25eaf14ec0</anchor>
      <arglist>(value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::simulation::skirt</name>
    <filename>namespacepts_1_1simulation_1_1skirt.html</filename>
    <class kind="class">pts::simulation::skirt::Skirt</class>
  </compound>
  <compound kind="namespace">
    <name>pts::simulation::text</name>
    <filename>namespacepts_1_1simulation_1_1text.html</filename>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_indexForDescriptionInHeader</name>
      <anchorfile>namespacepts_1_1simulation_1_1text.html</anchorfile>
      <anchor>ab86c52d070d3513f3210418a310b282f</anchor>
      <arglist>(spec, header)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_representsInteger</name>
      <anchorfile>namespacepts_1_1simulation_1_1text.html</anchorfile>
      <anchor>a52186ef1c03f27c46c788b133a254be9</anchor>
      <arglist>(value)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getColumnDescriptions</name>
      <anchorfile>namespacepts_1_1simulation_1_1text.html</anchorfile>
      <anchor>a8af6910759b82d2adbf9fe6175ed08a3</anchor>
      <arglist>(path)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getQuantityFromFile</name>
      <anchorfile>namespacepts_1_1simulation_1_1text.html</anchorfile>
      <anchor>aee0798e215d80013feb3bb341d9957d2</anchor>
      <arglist>(path, trigger, header)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>loadColumns</name>
      <anchorfile>namespacepts_1_1simulation_1_1text.html</anchorfile>
      <anchor>afd044239c9aac8046f70302e1c3d8bd4</anchor>
      <arglist>(path, columns=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>saveColumns</name>
      <anchorfile>namespacepts_1_1simulation_1_1text.html</anchorfile>
      <anchor>a4bb28ec615dd942b265ce866c910661b</anchor>
      <arglist>(path, quantities, units, descriptions, *title=None, fmt=&quot;%1.9e&quot;)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::simulation::units</name>
    <filename>namespacepts_1_1simulation_1_1units.html</filename>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_flavor</name>
      <anchorfile>namespacepts_1_1simulation_1_1units.html</anchorfile>
      <anchor>a61bd5c6d66dd59c98e2f323fd9bc7486</anchor>
      <arglist>(flavorunit)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convertToFlavor</name>
      <anchorfile>namespacepts_1_1simulation_1_1units.html</anchorfile>
      <anchor>a1645c8cd09511e926b14713f2fe1371a</anchor>
      <arglist>(wavelength, flux, flavor)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>hasReverseWavelengthOrder</name>
      <anchorfile>namespacepts_1_1simulation_1_1units.html</anchorfile>
      <anchor>ab3df723c6b54a1730fdc506166b2d90f</anchor>
      <arglist>(unitlike)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>latexForSpectralFlux</name>
      <anchorfile>namespacepts_1_1simulation_1_1units.html</anchorfile>
      <anchor>a5c481c2cc7e6ecc60631203b2a1081d9</anchor>
      <arglist>(unitlike)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>latexForSpectralFluxWithUnit</name>
      <anchorfile>namespacepts_1_1simulation_1_1units.html</anchorfile>
      <anchor>aa325d96cb65e0ae3f069ba93f5ccbb8b</anchor>
      <arglist>(unitlike)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>latexForSpectralLuminosity</name>
      <anchorfile>namespacepts_1_1simulation_1_1units.html</anchorfile>
      <anchor>a33710c51a64083a18bf4ee18b3ee1f89</anchor>
      <arglist>(unitlike)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>latexForSpectralLuminosityWithUnit</name>
      <anchorfile>namespacepts_1_1simulation_1_1units.html</anchorfile>
      <anchor>a35c298aebc8285e24f3c631f056e1a5a</anchor>
      <arglist>(unitlike)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>latexForSpectralRadiance</name>
      <anchorfile>namespacepts_1_1simulation_1_1units.html</anchorfile>
      <anchor>a07e4f5efb7ab84a4736a334b6f4a5254</anchor>
      <arglist>(unitlike)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>latexForSpectralRadianceWithUnit</name>
      <anchorfile>namespacepts_1_1simulation_1_1units.html</anchorfile>
      <anchor>a2f0775b967f40c0c3ecc21a5d3fe46bf</anchor>
      <arglist>(unitlike)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>latexForUnit</name>
      <anchorfile>namespacepts_1_1simulation_1_1units.html</anchorfile>
      <anchor>aa3ad54f25ac642f129ca12db14e6c4fd</anchor>
      <arglist>(unitlike)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>latexForWavelength</name>
      <anchorfile>namespacepts_1_1simulation_1_1units.html</anchorfile>
      <anchor>a6e316d337d386f20487eb23937d440a6</anchor>
      <arglist>(unitlike)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>latexForWavelengthWithUnit</name>
      <anchorfile>namespacepts_1_1simulation_1_1units.html</anchorfile>
      <anchor>afd962769f115e72d4c810dabd038cfd2</anchor>
      <arglist>(unitlike)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>unit</name>
      <anchorfile>namespacepts_1_1simulation_1_1units.html</anchorfile>
      <anchor>ae2dba0339c7ca751611dd34e71554514</anchor>
      <arglist>(unitlike)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::skiupgrade</name>
    <filename>namespacepts_1_1skiupgrade.html</filename>
    <namespace>pts::skiupgrade::do</namespace>
    <namespace>pts::skiupgrade::skiupgrade</namespace>
  </compound>
  <compound kind="namespace">
    <name>pts::skiupgrade::do</name>
    <filename>namespacepts_1_1skiupgrade_1_1do.html</filename>
    <namespace>pts::skiupgrade::do::test_upgrade_ski_files</namespace>
    <namespace>pts::skiupgrade::do::upgrade_functional_tests</namespace>
    <namespace>pts::skiupgrade::do::upgrade_ski_files</namespace>
  </compound>
  <compound kind="namespace">
    <name>pts::skiupgrade::do::test_upgrade_ski_files</name>
    <filename>namespacepts_1_1skiupgrade_1_1do_1_1test__upgrade__ski__files.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::skiupgrade::do::upgrade_functional_tests</name>
    <filename>namespacepts_1_1skiupgrade_1_1do_1_1upgrade__functional__tests.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::skiupgrade::do::upgrade_ski_files</name>
    <filename>namespacepts_1_1skiupgrade_1_1do_1_1upgrade__ski__files.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::skiupgrade::skiupgrade</name>
    <filename>namespacepts_1_1skiupgrade_1_1skiupgrade.html</filename>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_addScalarProperty</name>
      <anchorfile>namespacepts_1_1skiupgrade_1_1skiupgrade.html</anchorfile>
      <anchor>accfe52fe95ae05c97fe6ed66a537aa44</anchor>
      <arglist>(typeName, propName, propStringValue)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_changeBooleanToEnumeration</name>
      <anchorfile>namespacepts_1_1skiupgrade_1_1skiupgrade.html</anchorfile>
      <anchor>aa888bde3a75e2ae71d73bb317ad892a4</anchor>
      <arglist>(typeName, oldPropName, newPropName, newValueForFalse, newValueForTrue)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_changeCompoundPropertyBaseType</name>
      <anchorfile>namespacepts_1_1skiupgrade_1_1skiupgrade.html</anchorfile>
      <anchor>a0fe247bc3af593072628b9212657a008</anchor>
      <arglist>(typeName, propName, oldBaseType, newBaseType)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_changeCompoundPropertyName</name>
      <anchorfile>namespacepts_1_1skiupgrade_1_1skiupgrade.html</anchorfile>
      <anchor>aca43d163c66a764cf681af4056b6ab00</anchor>
      <arglist>(typeName, oldPropName, newPropName)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_changeScalarPropertyName</name>
      <anchorfile>namespacepts_1_1skiupgrade_1_1skiupgrade.html</anchorfile>
      <anchor>af539a809dd88516171579457c9358f5f</anchor>
      <arglist>(typeName, oldPropName, newPropName)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_changeTypeName</name>
      <anchorfile>namespacepts_1_1skiupgrade_1_1skiupgrade.html</anchorfile>
      <anchor>acff69794e82f72cadb8684ebee05d814</anchor>
      <arglist>(oldTypeName, newTypeName)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_copyCompoundProperty</name>
      <anchorfile>namespacepts_1_1skiupgrade_1_1skiupgrade.html</anchorfile>
      <anchor>acf88925d2501bf20fad28bf21d10ced6</anchor>
      <arglist>(oldTypeName, oldPropName, newTypeName)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_getUpgradeDefinitions</name>
      <anchorfile>namespacepts_1_1skiupgrade_1_1skiupgrade.html</anchorfile>
      <anchor>a8fd88d6b998d3b4c855d7ecdb265f9f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_moveScalarProperty</name>
      <anchorfile>namespacepts_1_1skiupgrade_1_1skiupgrade.html</anchorfile>
      <anchor>a73b67cb9201f9d81bdb8d7b66f921646</anchor>
      <arglist>(oldTypeName, oldPropName, newTypeName, newPropName=None)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_removeCompoundProperty</name>
      <anchorfile>namespacepts_1_1skiupgrade_1_1skiupgrade.html</anchorfile>
      <anchor>acda55bda7ca77fa45a46a412dcb0378c</anchor>
      <arglist>(typeName, oldPropName)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_removeScalarProperty</name>
      <anchorfile>namespacepts_1_1skiupgrade_1_1skiupgrade.html</anchorfile>
      <anchor>afe4d4f2b243816d187b1c4f711827112</anchor>
      <arglist>(typeName, oldPropName)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_removeScalarPropertyWithValue</name>
      <anchorfile>namespacepts_1_1skiupgrade_1_1skiupgrade.html</anchorfile>
      <anchor>a3d92868c5b3bf499b71c01f0cc58cfd7</anchor>
      <arglist>(typeName, oldPropName, oldValue)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>upgradeSkiFile</name>
      <anchorfile>namespacepts_1_1skiupgrade_1_1skiupgrade.html</anchorfile>
      <anchor>aa07ac60ee512455d98d4bb04eb7f92aa</anchor>
      <arglist>(inpath, *backup=True, replace=True)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::storedtable</name>
    <filename>namespacepts_1_1storedtable.html</filename>
    <namespace>pts::storedtable::conversionspec</namespace>
    <namespace>pts::storedtable::convert_band</namespace>
    <namespace>pts::storedtable::convert_copy</namespace>
    <namespace>pts::storedtable::convert_enthalpies</namespace>
    <namespace>pts::storedtable::convert_opticalprops</namespace>
    <namespace>pts::storedtable::convert_sed</namespace>
    <namespace>pts::storedtable::convert_singlegrain</namespace>
    <namespace>pts::storedtable::do</namespace>
    <namespace>pts::storedtable::io</namespace>
    <namespace>pts::storedtable::tokenizedfile</namespace>
  </compound>
  <compound kind="namespace">
    <name>pts::storedtable::conversionspec</name>
    <filename>namespacepts_1_1storedtable_1_1conversionspec.html</filename>
    <class kind="class">pts::storedtable::conversionspec::ConversionSpec</class>
    <class kind="class">pts::storedtable::conversionspec::ConversionSpecs</class>
    <member kind="function">
      <type>def</type>
      <name>createConversionSpecs</name>
      <anchorfile>namespacepts_1_1storedtable_1_1conversionspec.html</anchorfile>
      <anchor>acfbfd1ae0474205c945163ddcc620019</anchor>
      <arglist>(inputPath, outputPath, subDirectory)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>findSubDirectory</name>
      <anchorfile>namespacepts_1_1storedtable_1_1conversionspec.html</anchorfile>
      <anchor>a25531d47bf0aecea0ba19003ed338c4c</anchor>
      <arglist>(rootPath, subDirectory)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::storedtable::convert_band</name>
    <filename>namespacepts_1_1storedtable_1_1convert__band.html</filename>
    <member kind="function">
      <type>def</type>
      <name>writeBroadBands</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__band.html</anchorfile>
      <anchor>a82e839b054471038f7ec8544a15d5e6f</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::storedtable::convert_copy</name>
    <filename>namespacepts_1_1storedtable_1_1convert__copy.html</filename>
    <member kind="function">
      <type>def</type>
      <name>copyWithoutConversion</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__copy.html</anchorfile>
      <anchor>aa1f5ed59ecbcb0f654c7f026fb41237f</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::storedtable::convert_enthalpies</name>
    <filename>namespacepts_1_1storedtable_1_1convert__enthalpies.html</filename>
    <member kind="function">
      <type>def</type>
      <name>convertDraineEnthalpies</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__enthalpies.html</anchorfile>
      <anchor>abc72f26af90d32a4dd5e71d14940ad24</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convertDustemEnthalpies</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__enthalpies.html</anchorfile>
      <anchor>a7ab71695856a34b9d0be8aa06210e93b</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convertTrustBenchmarkEnthalpies</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__enthalpies.html</anchorfile>
      <anchor>af08307a812bc408241dd63385aed4c1d</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::storedtable::convert_opticalprops</name>
    <filename>namespacepts_1_1storedtable_1_1convert__opticalprops.html</filename>
    <member kind="function">
      <type>def</type>
      <name>convertDustemOpticalProps</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__opticalprops.html</anchorfile>
      <anchor>af0a7efb48abdd4ba00593b26266388df</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convertGenericOpticalProps</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__opticalprops.html</anchorfile>
      <anchor>a897ad9461ab7f338a803f574dbe7e29f</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convertMinOpticalProps</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__opticalprops.html</anchorfile>
      <anchor>a3e544a575eba7529e2d7249db014a60d</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convertStokesPolarizedOpticalProps</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__opticalprops.html</anchorfile>
      <anchor>a9bcc42f0058be9f0991808facafed500</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::storedtable::convert_sed</name>
    <filename>namespacepts_1_1storedtable_1_1convert__sed.html</filename>
    <member kind="function">
      <type>def</type>
      <name>convertBpassSEDFamily</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__sed.html</anchorfile>
      <anchor>a120b4b067032367badc593da383663c3</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convertBruzualCharlotSEDFamily</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__sed.html</anchorfile>
      <anchor>a26e8b72c151bccc3d0eec9e52c84d14f</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convertCastelliKuruczSEDFamily</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__sed.html</anchorfile>
      <anchor>aa9f87b5b57f5d968a01fae228be2e787</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convertFSPSSEDFamily</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__sed.html</anchorfile>
      <anchor>ae2f3fc64a5d4c847fff9849ab32cb695</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convertMappingsSEDFamily</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__sed.html</anchorfile>
      <anchor>af95a45b4a2aae1ae6d98b0768dcdb36e</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convertMarastonSEDFamily</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__sed.html</anchorfile>
      <anchor>afbbb1105f0cdcfdbfe1b4978428c7a73</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convertStarburst99SEDFamily</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__sed.html</anchorfile>
      <anchor>a982d98ee6ccfb0d58b784431690c396b</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convertTextSEDinWattsPerMicron</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__sed.html</anchorfile>
      <anchor>a9619746dc55d280ee4468846699e5d38</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createQuasarSED</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__sed.html</anchorfile>
      <anchor>a840b96ae223185fb8fef7646f94c0788</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::storedtable::convert_singlegrain</name>
    <filename>namespacepts_1_1storedtable_1_1convert__singlegrain.html</filename>
    <member kind="function">
      <type>def</type>
      <name>convertMeanDraineLiOpticalProps</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__singlegrain.html</anchorfile>
      <anchor>a2d16224098b1db65a6fb5410ef30d562</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convertMeanInterstellarOpticalProps</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__singlegrain.html</anchorfile>
      <anchor>a0971197854a31630ef2cf15b52fecca7</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convertMeanPascucciBenchmarkOpticalProps</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__singlegrain.html</anchorfile>
      <anchor>ac70442237d3120ece18eff82b72df289</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convertMeanPinteBenchmarkMuellerMatrix</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__singlegrain.html</anchorfile>
      <anchor>a053433b66798bfbb261bd502bb868bf9</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convertMeanPinteBenchmarkOpticalProps</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__singlegrain.html</anchorfile>
      <anchor>ab6b9dc202a6b2ac5a3a997e8c7adba2d</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convertMeanTrustBenchmarkMuellerMatrix</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__singlegrain.html</anchorfile>
      <anchor>a94c3989e79a0545643a0a4f3485a94f8</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convertMeanTrustBenchmarkOpticalProps</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__singlegrain.html</anchorfile>
      <anchor>ae7165e6c36fc129785c7a5e155a032cf</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convertMeanZubkoOpticalProps</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__singlegrain.html</anchorfile>
      <anchor>a5fc0eb268bb2e8a5cab75eb18bd64f12</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createMeanIvezicBenchmarkOpticalProps</name>
      <anchorfile>namespacepts_1_1storedtable_1_1convert__singlegrain.html</anchorfile>
      <anchor>af07dd65c1833b0bef786e9f37e1073eb</anchor>
      <arglist>(inFilePaths, outFilePaths)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::storedtable::do</name>
    <filename>namespacepts_1_1storedtable_1_1do.html</filename>
    <namespace>pts::storedtable::do::construct_skirt_resources</namespace>
    <namespace>pts::storedtable::do::convert_text_to_stored_columns</namespace>
    <namespace>pts::storedtable::do::fsps_to_stored_table</namespace>
    <namespace>pts::storedtable::do::fsps_with_lines_to_stored_table</namespace>
    <namespace>pts::storedtable::do::list_stored_table_or_columns_info</namespace>
  </compound>
  <compound kind="namespace">
    <name>pts::storedtable::do::construct_skirt_resources</name>
    <filename>namespacepts_1_1storedtable_1_1do_1_1construct__skirt__resources.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::storedtable::do::convert_text_to_stored_columns</name>
    <filename>namespacepts_1_1storedtable_1_1do_1_1convert__text__to__stored__columns.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::storedtable::do::fsps_to_stored_table</name>
    <filename>namespacepts_1_1storedtable_1_1do_1_1fsps__to__stored__table.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::storedtable::do::fsps_with_lines_to_stored_table</name>
    <filename>namespacepts_1_1storedtable_1_1do_1_1fsps__with__lines__to__stored__table.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::storedtable::do::list_stored_table_or_columns_info</name>
    <filename>namespacepts_1_1storedtable_1_1do_1_1list__stored__table__or__columns__info.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::storedtable::io</name>
    <filename>namespacepts_1_1storedtable_1_1io.html</filename>
    <member kind="function">
      <type>def</type>
      <name>arrayFromFile</name>
      <anchorfile>namespacepts_1_1storedtable_1_1io.html</anchorfile>
      <anchor>a28a38dd2bf66983d444056b5ae49bafc</anchor>
      <arglist>(fd, shape)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>arrayToFile</name>
      <anchorfile>namespacepts_1_1storedtable_1_1io.html</anchorfile>
      <anchor>a0e91b31d52e3993d18e83be86058b11d</anchor>
      <arglist>(fd, a)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>intFromFile</name>
      <anchorfile>namespacepts_1_1storedtable_1_1io.html</anchorfile>
      <anchor>aa0041b2962e0e68c3d38397575569612</anchor>
      <arglist>(fd)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>intToFile</name>
      <anchorfile>namespacepts_1_1storedtable_1_1io.html</anchorfile>
      <anchor>a03cfe7a9aaaf972388616769403aa466</anchor>
      <arglist>(fd, n)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>listStoredColumnsInfo</name>
      <anchorfile>namespacepts_1_1storedtable_1_1io.html</anchorfile>
      <anchor>a2db6eeb1f3078c310e3c97ea9a4fe4f6</anchor>
      <arglist>(columnsFilePath)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>listStoredTableInfo</name>
      <anchorfile>namespacepts_1_1storedtable_1_1io.html</anchorfile>
      <anchor>a5eaa2dfe418d84370623fe61150c0cd4</anchor>
      <arglist>(tableFilePath)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>readStoredColumns</name>
      <anchorfile>namespacepts_1_1storedtable_1_1io.html</anchorfile>
      <anchor>a055d25d53cd0cdae1e689d044ff76c22</anchor>
      <arglist>(columnsFilePath)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>readStoredTable</name>
      <anchorfile>namespacepts_1_1storedtable_1_1io.html</anchorfile>
      <anchor>a3ddd7435437e29ef60d17d3f3e8da910</anchor>
      <arglist>(tableFilePath)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>stringFromFile</name>
      <anchorfile>namespacepts_1_1storedtable_1_1io.html</anchorfile>
      <anchor>a53a53e1dfc3f06bb4612d3ee1c23ad9a</anchor>
      <arglist>(fd)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>stringToFile</name>
      <anchorfile>namespacepts_1_1storedtable_1_1io.html</anchorfile>
      <anchor>a51b378c9d24ff8c31e83ff45ba9c6db1</anchor>
      <arglist>(fd, s)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>writeStoredColumns</name>
      <anchorfile>namespacepts_1_1storedtable_1_1io.html</anchorfile>
      <anchor>aeb17dde16c9568955788dfacf3b7cb0e</anchor>
      <arglist>(outFilePath, columnNames, columnUnits, values)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>writeStoredTable</name>
      <anchorfile>namespacepts_1_1storedtable_1_1io.html</anchorfile>
      <anchor>a8529e3bf134ff803a035dca8d0a6633f</anchor>
      <arglist>(outFilePath, axisNames, axisUnits, axisScales, axisGrids, quantityNames, quantityUnits, quantityScales, quantityValues)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::storedtable::tokenizedfile</name>
    <filename>namespacepts_1_1storedtable_1_1tokenizedfile.html</filename>
    <class kind="class">pts::storedtable::tokenizedfile::TokenizedFile</class>
  </compound>
  <compound kind="namespace">
    <name>pts::test</name>
    <filename>namespacepts_1_1test.html</filename>
    <namespace>pts::test::do</namespace>
    <namespace>pts::test::functional</namespace>
  </compound>
  <compound kind="namespace">
    <name>pts::test::do</name>
    <filename>namespacepts_1_1test_1_1do.html</filename>
    <namespace>pts::test::do::clean_functional</namespace>
    <namespace>pts::test::do::endorse_functional</namespace>
    <namespace>pts::test::do::test_functional</namespace>
  </compound>
  <compound kind="namespace">
    <name>pts::test::do::clean_functional</name>
    <filename>namespacepts_1_1test_1_1do_1_1clean__functional.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::test::do::endorse_functional</name>
    <filename>namespacepts_1_1test_1_1do_1_1endorse__functional.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::test::do::test_functional</name>
    <filename>namespacepts_1_1test_1_1do_1_1test__functional.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::test::functional</name>
    <filename>namespacepts_1_1test_1_1functional.html</filename>
    <class kind="class">pts::test::functional::SkirtTestSuite</class>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_areEqualFitsFiles</name>
      <anchorfile>namespacepts_1_1test_1_1functional.html</anchorfile>
      <anchor>adea093db885aaf5ae4cbdc6b075d08b3</anchor>
      <arglist>(filePath1, filePath2)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_areEqualLists</name>
      <anchorfile>namespacepts_1_1test_1_1functional.html</anchorfile>
      <anchor>a6ebceffebe67179776259eec35474f17</anchor>
      <arglist>(list1, list2, allowedDiffs)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_readBlocks</name>
      <anchorfile>namespacepts_1_1test_1_1functional.html</anchorfile>
      <anchor>a4f7887d826b1d4833a53c539e5c5511f</anchor>
      <arglist>(filepath)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>findDifferences</name>
      <anchorfile>namespacepts_1_1test_1_1functional.html</anchorfile>
      <anchor>a4d6915542d73d8c9cdf143f8f8e27998</anchor>
      <arglist>(sim)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getDifferenceStatistics</name>
      <anchorfile>namespacepts_1_1test_1_1functional.html</anchorfile>
      <anchor>a6079f02e206ac96b5ccfdfd8bfbc1dee</anchor>
      <arglist>(sim, name)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>reportTestCase</name>
      <anchorfile>namespacepts_1_1test_1_1functional.html</anchorfile>
      <anchor>af020701b79e7c1bebc6a8c978a36dc2b</anchor>
      <arglist>(sim)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::utils</name>
    <filename>namespacepts_1_1utils.html</filename>
    <namespace>pts::utils::config</namespace>
    <namespace>pts::utils::envir</namespace>
    <namespace>pts::utils::error</namespace>
    <namespace>pts::utils::path</namespace>
  </compound>
  <compound kind="namespace">
    <name>pts::utils::config</name>
    <filename>namespacepts_1_1utils_1_1config.html</filename>
    <member kind="function">
      <type>def</type>
      <name>interactive</name>
      <anchorfile>namespacepts_1_1utils_1_1config.html</anchorfile>
      <anchor>afb30be5cb52cb2289f0874d96ba0f3b0</anchor>
      <arglist>(mode=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setInteractive</name>
      <anchorfile>namespacepts_1_1utils_1_1config.html</anchorfile>
      <anchor>aa1e9c7fa94bc7ddba1a24462f8a0c34a</anchor>
      <arglist>(mode)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>_interactive</name>
      <anchorfile>namespacepts_1_1utils_1_1config.html</anchorfile>
      <anchor>aba4eaa0826f39f885efa5e977f2ecb85</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::utils::envir</name>
    <filename>namespacepts_1_1utils_1_1envir.html</filename>
    <member kind="function">
      <type>def</type>
      <name>hostname</name>
      <anchorfile>namespacepts_1_1utils_1_1envir.html</anchorfile>
      <anchor>a781a92374ce1dcccba540ecb59276509</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>timestamp</name>
      <anchorfile>namespacepts_1_1utils_1_1envir.html</anchorfile>
      <anchor>a1b6c08704accd068fe9156c7e787df6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>username</name>
      <anchorfile>namespacepts_1_1utils_1_1envir.html</anchorfile>
      <anchor>afd4fa50c7c0d02bbc94e97f338596d80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::utils::error</name>
    <filename>namespacepts_1_1utils_1_1error.html</filename>
    <class kind="class">pts::utils::error::UserError</class>
  </compound>
  <compound kind="namespace">
    <name>pts::utils::path</name>
    <filename>namespacepts_1_1utils_1_1path.html</filename>
    <member kind="function">
      <type>def</type>
      <name>absPath</name>
      <anchorfile>namespacepts_1_1utils_1_1path.html</anchorfile>
      <anchor>a97a3fd4da20ee241ea0baa0b36b3c81f</anchor>
      <arglist>(inpath)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>dataPath</name>
      <anchorfile>namespacepts_1_1utils_1_1path.html</anchorfile>
      <anchor>ab027d42c2bc4e8c8dc942e8a7c363b7f</anchor>
      <arglist>(object)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>projectParentPath</name>
      <anchorfile>namespacepts_1_1utils_1_1path.html</anchorfile>
      <anchor>a59d41122dabb338f11327ec365a91130</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>ptsPath</name>
      <anchorfile>namespacepts_1_1utils_1_1path.html</anchorfile>
      <anchor>abfe2ecbb7e4376eca9eb5ffd306d57ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>savePath</name>
      <anchorfile>namespacepts_1_1utils_1_1path.html</anchorfile>
      <anchor>a864d692d452e7935d3d8d652ce05c800</anchor>
      <arglist>(defFilePath, suffix, *outDirPath=None, outFileName=None, outFilePath=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>skirtPath</name>
      <anchorfile>namespacepts_1_1utils_1_1path.html</anchorfile>
      <anchor>a7a31123698d53175c0c67367f90c888e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::visual</name>
    <filename>namespacepts_1_1visual.html</filename>
    <namespace>pts::visual::do</namespace>
    <namespace>pts::visual::makergbimages</namespace>
    <namespace>pts::visual::makewavelengthmovie</namespace>
    <namespace>pts::visual::moviefile</namespace>
    <namespace>pts::visual::plotbands</namespace>
    <namespace>pts::visual::plotconvergencecuts</namespace>
    <namespace>pts::visual::plotcurves</namespace>
    <namespace>pts::visual::plotgrids</namespace>
    <namespace>pts::visual::plotpolarization</namespace>
    <namespace>pts::visual::plotscalarcuts</namespace>
    <namespace>pts::visual::plotstoredtable</namespace>
    <namespace>pts::visual::plotvectorcuts</namespace>
    <namespace>pts::visual::rgbimage</namespace>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::do</name>
    <filename>namespacepts_1_1visual_1_1do.html</filename>
    <namespace>pts::visual::do::make_images</namespace>
    <namespace>pts::visual::do::make_wavelength_movie</namespace>
    <namespace>pts::visual::do::plot_bands</namespace>
    <namespace>pts::visual::do::plot_convergence</namespace>
    <namespace>pts::visual::do::plot_density</namespace>
    <namespace>pts::visual::do::plot_grids</namespace>
    <namespace>pts::visual::do::plot_magnetic_field</namespace>
    <namespace>pts::visual::do::plot_opacity</namespace>
    <namespace>pts::visual::do::plot_polarization</namespace>
    <namespace>pts::visual::do::plot_seds</namespace>
    <namespace>pts::visual::do::plot_sources</namespace>
    <namespace>pts::visual::do::plot_spectral_resolution</namespace>
    <namespace>pts::visual::do::plot_stored_table</namespace>
    <namespace>pts::visual::do::plot_temperature</namespace>
    <namespace>pts::visual::do::plot_velocity</namespace>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::do::make_images</name>
    <filename>namespacepts_1_1visual_1_1do_1_1make__images.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::do::make_wavelength_movie</name>
    <filename>namespacepts_1_1visual_1_1do_1_1make__wavelength__movie.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::do::plot_bands</name>
    <filename>namespacepts_1_1visual_1_1do_1_1plot__bands.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::do::plot_convergence</name>
    <filename>namespacepts_1_1visual_1_1do_1_1plot__convergence.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::do::plot_density</name>
    <filename>namespacepts_1_1visual_1_1do_1_1plot__density.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::do::plot_grids</name>
    <filename>namespacepts_1_1visual_1_1do_1_1plot__grids.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::do::plot_magnetic_field</name>
    <filename>namespacepts_1_1visual_1_1do_1_1plot__magnetic__field.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::do::plot_opacity</name>
    <filename>namespacepts_1_1visual_1_1do_1_1plot__opacity.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::do::plot_polarization</name>
    <filename>namespacepts_1_1visual_1_1do_1_1plot__polarization.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::do::plot_seds</name>
    <filename>namespacepts_1_1visual_1_1do_1_1plot__seds.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::do::plot_sources</name>
    <filename>namespacepts_1_1visual_1_1do_1_1plot__sources.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::do::plot_spectral_resolution</name>
    <filename>namespacepts_1_1visual_1_1do_1_1plot__spectral__resolution.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::do::plot_stored_table</name>
    <filename>namespacepts_1_1visual_1_1do_1_1plot__stored__table.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::do::plot_temperature</name>
    <filename>namespacepts_1_1visual_1_1do_1_1plot__temperature.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::do::plot_velocity</name>
    <filename>namespacepts_1_1visual_1_1do_1_1plot__velocity.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::makergbimages</name>
    <filename>namespacepts_1_1visual_1_1makergbimages.html</filename>
    <member kind="function">
      <type>def</type>
      <name>makeConvolvedRGBImages</name>
      <anchorfile>namespacepts_1_1visual_1_1makergbimages.html</anchorfile>
      <anchor>ad50f6868e0e133112f3966dbb464d3c4</anchor>
      <arglist>(simulation, contributions, name=&quot;&quot;, *fileType=&quot;total&quot;, decades=3, fmax=None, fmin=None, outDirPath=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>makeRGBImages</name>
      <anchorfile>namespacepts_1_1visual_1_1makergbimages.html</anchorfile>
      <anchor>a509b248a0f36ff4409c1c0b26ab8b96a</anchor>
      <arglist>(simulation, wavelengthTuples=None, *fileType=&quot;total&quot;, fromPercentile=30, toPercentile=100, outDirPath=None)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::makewavelengthmovie</name>
    <filename>namespacepts_1_1visual_1_1makewavelengthmovie.html</filename>
    <member kind="function">
      <type>def</type>
      <name>makeWavelengthMovie</name>
      <anchorfile>namespacepts_1_1visual_1_1makewavelengthmovie.html</anchorfile>
      <anchor>a00d6bd679f89d70f838501c564956e11</anchor>
      <arglist>(simulation, *maxPercentile=100, minPercentile=10, decades=None, renormalize=False, outDirPath=None, outFileName=None, outFilePath=None, rate=7)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::moviefile</name>
    <filename>namespacepts_1_1visual_1_1moviefile.html</filename>
    <class kind="class">pts::visual::moviefile::MovieFile</class>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::plotbands</name>
    <filename>namespacepts_1_1visual_1_1plotbands.html</filename>
    <member kind="function">
      <type>def</type>
      <name>plotBuiltinBands</name>
      <anchorfile>namespacepts_1_1visual_1_1plotbands.html</anchorfile>
      <anchor>a7bdb2444b040e9aa25c26a485d790e9b</anchor>
      <arglist>(minWavelength=1e-6 *u.micron, maxWavelength=1e6 *u.micron, nameSegments=None, *outDirPath=None, outFileName=None, outFilePath=None, figSize=(20, 6), interactive=None)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::plotconvergencecuts</name>
    <filename>namespacepts_1_1visual_1_1plotconvergencecuts.html</filename>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_convergenceInfoPath</name>
      <anchorfile>namespacepts_1_1visual_1_1plotconvergencecuts.html</anchorfile>
      <anchor>a3327da0bca0e453ff17f283d024fddcc</anchor>
      <arglist>(simulation, cutsprobe)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_latexForNumber</name>
      <anchorfile>namespacepts_1_1visual_1_1plotconvergencecuts.html</anchorfile>
      <anchor>a40ace2eb7b4fe5969eb7ffab84bbef32</anchor>
      <arglist>(value)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>plotConvergenceCuts</name>
      <anchorfile>namespacepts_1_1visual_1_1plotconvergencecuts.html</anchorfile>
      <anchor>ab8c43a7dd4ec7ac6baae94eff05dc136</anchor>
      <arglist>(simulation, decades=5, *outDirPath=None, outFileName=None, outFilePath=None, figSize=None, interactive=None)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::plotcurves</name>
    <filename>namespacepts_1_1visual_1_1plotcurves.html</filename>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_adjustWavelengthRange</name>
      <anchorfile>namespacepts_1_1visual_1_1plotcurves.html</anchorfile>
      <anchor>a50a6489629f824c980bab74448e9c88e</anchor>
      <arglist>(wrange, wunit, wmin=None, wmax=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>plotSeds</name>
      <anchorfile>namespacepts_1_1visual_1_1plotcurves.html</anchorfile>
      <anchor>a2cafed9728a7d100ee928b4d33318d19</anchor>
      <arglist>(simulation, minWavelength=None, maxWavelength=None, decades=None, *outDirPath=None, outFileName=None, outFilePath=None, figSize=(8, 6), interactive=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>plotSources</name>
      <anchorfile>namespacepts_1_1visual_1_1plotcurves.html</anchorfile>
      <anchor>a3efda44645d797a42a58afd492f4ae83</anchor>
      <arglist>(simulation, minWavelength=None, maxWavelength=None, decades=None, *outDirPath=None, outFileName=None, outFilePath=None, figSize=(8, 6), interactive=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>plotSpectralResolution</name>
      <anchorfile>namespacepts_1_1visual_1_1plotcurves.html</anchorfile>
      <anchor>a29c66a07e4b3d8961ea12161ef4f8569</anchor>
      <arglist>(inFilePath, minWavelength=None, maxWavelength=None, decades=None, *title=None, outDirPath=None, outFileName=None, outFilePath=None, figSize=(8, 5), interactive=None)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::plotgrids</name>
    <filename>namespacepts_1_1visual_1_1plotgrids.html</filename>
    <member kind="function">
      <type>def</type>
      <name>plotGrids</name>
      <anchorfile>namespacepts_1_1visual_1_1plotgrids.html</anchorfile>
      <anchor>a219d14b8c9dc4d3f3e9ced5a8bc55075</anchor>
      <arglist>(simulation, *lineWidth=0.1, outDirPath=None, figSize=(8, 8))</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::plotpolarization</name>
    <filename>namespacepts_1_1visual_1_1plotpolarization.html</filename>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_circArrow</name>
      <anchorfile>namespacepts_1_1visual_1_1plotpolarization.html</anchorfile>
      <anchor>ad70130bedb6043e84da8545075d89979</anchor>
      <arglist>(ax, posx, posy, size)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_roundUp</name>
      <anchorfile>namespacepts_1_1visual_1_1plotpolarization.html</anchorfile>
      <anchor>af339828fe7e19c2f06a99adfe819eb81</anchor>
      <arglist>(x, slack=0.01)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>plotPolarization</name>
      <anchorfile>namespacepts_1_1visual_1_1plotpolarization.html</anchorfile>
      <anchor>afc113ec8c549f36500d6ec7947076713</anchor>
      <arglist>(simulation, *plotLinMap=True, plotDegMap=False, plotDegAvg=False, plotCirMap=False, wavelength=None, binSize=(7, 7), degreeScale=None, decades=5, outDirPath=None, figSize=(8, 6), interactive=None)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::plotscalarcuts</name>
    <filename>namespacepts_1_1visual_1_1plotscalarcuts.html</filename>
    <member kind="function">
      <type>def</type>
      <name>plotScalarCuts</name>
      <anchorfile>namespacepts_1_1visual_1_1plotscalarcuts.html</anchorfile>
      <anchor>acea8c5e3dfd9317a90a81c775093668d</anchor>
      <arglist>(simulation, probeTypes, decades=5, *outDirPath=None, outFileName=None, outFilePath=None, figSize=None, interactive=None)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::plotstoredtable</name>
    <filename>namespacepts_1_1visual_1_1plotstoredtable.html</filename>
    <member kind="function">
      <type>def</type>
      <name>plotStoredTableCurve</name>
      <anchorfile>namespacepts_1_1visual_1_1plotstoredtable.html</anchorfile>
      <anchor>a5d13a6158bee73b9da3813d051be44e1</anchor>
      <arglist>(tableFilePath, horAxis=0, verAxis=0, *axis0=None, axis1=None, axis2=None, axis3=None, axis4=None, outDirPath=None, outFileName=None, outFilePath=None, figSize=(8, 6), interactive=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>plotStoredTableInteractive</name>
      <anchorfile>namespacepts_1_1visual_1_1plotstoredtable.html</anchorfile>
      <anchor>ac5792621943ccb8f7f24d4263d3ea1f3</anchor>
      <arglist>(tableFilePath, *figSize=(8, 6))</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::plotvectorcuts</name>
    <filename>namespacepts_1_1visual_1_1plotvectorcuts.html</filename>
    <member kind="function">
      <type>def</type>
      <name>plotVectorCuts</name>
      <anchorfile>namespacepts_1_1visual_1_1plotvectorcuts.html</anchorfile>
      <anchor>acc0ab2ea4b9145c5e080958bdc5d6a78</anchor>
      <arglist>(simulation, probeTypes, binSize=(32, 32), *outDirPath=None, outFileName=None, outFilePath=None, figSize=(6, 6), interactive=None)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pts::visual::rgbimage</name>
    <filename>namespacepts_1_1visual_1_1rgbimage.html</filename>
    <class kind="class">pts::visual::rgbimage::_CubicSpline</class>
    <class kind="class">pts::visual::rgbimage::RGBImage</class>
    <member kind="function" protection="private">
      <type>def</type>
      <name>_split16</name>
      <anchorfile>namespacepts_1_1visual_1_1rgbimage.html</anchorfile>
      <anchor>a5d1d99d07700577f4ee53853b81fc73e</anchor>
      <arglist>(value32)</arglist>
    </member>
  </compound>
</tagfile>
