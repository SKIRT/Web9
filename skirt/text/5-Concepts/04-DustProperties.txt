/**

\page DustProperties Dust properties

Absorption and scattering by dust plays an important role in most \c SKIRT simulations. This concept note describes
how \c SKIRT obtains and uses the optical and calorimetric dust properties that are appropriate for a particular
astrophysical model.

\section DustQuantity Physical quantities

\c SKIRT uses two related quantities for defining the amount of material present in a given volume: number density
and mass density. The kind of physical entity being counted by the number density and the conversion from number
density to mass density depend on the type of material, as indicated in the table below.

Material type | Entity counted | Mass conversion
--------------|----------------|-----------------------------
Dust          | hydrogen atom  | dust mass per hydrogen atom
Electrons     | electron       | electron mass
Gas           | hydrogen atom  | gas mass per hydrogen atom

The following table lists some key quantities used in \c SKIRT simulations, with their corresponding SI units.

<TABLE>
<TR><TD><B>Symbol</B></TD>  <TD><B>%Units</B></TD>  <TD><B>Description</B></TD></TR>
<TR><TD>\f$\lambda\f$</TD>  <TD>\f$\text{m}\f$</TD>  <TD>Wavelength</TD></TR>
<TR><TD>\f$\overrightarrow{r}\f$</TD>  <TD>\f$\text{m}\f$</TD>  <TD>%Position</TD></TR>
<TR><TD>\f$\Delta s\f$</TD>  <TD>\f$m\f$</TD>  <TD>Distance along a path</TD></TR>
<TR><TD>\f$V\f$</TD>  <TD>\f$\text{m}^3\f$</TD>  <TD>Volume</TD></TR>
<TR><TD>\f$n\f$</TD>  <TD>\f$\#\,\text{m}^{-3}\f$</TD>  <TD>Number density (of entities)</TD></TR>
<TR><TD>\f$\mu\f$</TD>  <TD>\f$\text{kg}\,\#^{-1}\f$</TD>  <TD>Mass per entity</TD></TR>
<TR><TD>\f$\varsigma\f$</TD>  <TD>\f$\text{m}^2\,\#^{-1}\f$</TD>  <TD>Cross section per entity</TD></TR>
<TR><TD>\f$\mathcal{N}=n\Delta s\f$</TD> <TD>\f$\#\,\text{m}^{-2}\f$</TD>  <TD>Number column density</TD></TR>
<TR><TD>\f$N=nV\f$</TD>  <TD>\f$\#\f$</TD>  <TD>Number (of entities)</TD></TR>
<TR><TD>\f$\rho=n\mu\f$</TD>  <TD>\f$\text{kg}\,\text{m}^{-3}\f$</TD>  <TD>Mass density</TD></TR>
<TR><TD>\f$\Sigma=n\mu\Delta s\f$</TD> <TD>\f$\text{kg}\,\text{m}^{-2}\f$</TD>  <TD>Mass column density</TD></TR>
<TR><TD>\f$M=n\mu V\f$</TD>  <TD>\f$\text{kg}\f$</TD>  <TD>Mass</TD></TR>
<TR><TD>\f$\kappa=\varsigma/\mu\f$</TD>  <TD>\f$\text{m}^2\,\text{kg}^{-1}\f$</TD>  <TD>Mass coefficient</TD></TR>
<TR><TD>\f$k=n\varsigma\f$</TD>  <TD>\f$\text{m}^{-1}\f$</TD>  <TD>Opacity</TD></TR>
<TR><TD>\f$\tau=n\varsigma\Delta s\f$</TD>  <TD>\f$1\f$</TD>  <TD>Optical depth</TD></TR>
</TABLE>

\section DustClass Class hierarchy

The set of material properties corresponding to a particular transfer medium is represented in \c SKIRT as an instance
of a MaterialMix subclass. The following diagram shows a portion of the class inheritance tree (connections starting
with a triangle denote inheritance).

\dot
digraph dustmixhierarchy {
    rankdir=BT;
    node [shape=rect, fontname=Helvetica, fontsize=10];
    edge [arrowhead=empty];

    MaterialMix [label="MaterialMix" URL="\ref MaterialMix"];
      ElectronMix [label="ElectronMix" URL="\ref ElectronMix"];
      DustMix [label="DustMix" URL="\ref DustMix" color=blue];
        TabulatedDustMix [label="TabulatedDustMix" URL="\ref TabulatedDustMix"];
          MeanFileDustMix [label="MeanFileDustMix" URL="\ref MeanFileDustMix"];
        SingleGrainDustMix [label="SingleGrainDustMix" URL="\ref SingleGrainDustMix"];
          MeanInterstellarDustMix [label="MeanInterstellarDustMix" URL="\ref MeanInterstellarDustMix"];
        MultiGrainDustMix [label="MultiGrainDustMix" URL="\ref MultiGrainDustMix"];
          DraineLiDustMix [label="DraineLiDustMix" URL="\ref DraineLiDustMix"];
          ZubkoDustMix [label="ZubkoDustMix" URL="\ref ZubkoDustMix"];
          ThemisDustMix [label="ThemisDustMix" URL="\ref ThemisDustMix"];
          ConfigurableDustMix [label="ConfigurableDustMix" URL="\ref ConfigurableDustMix"];

      ElectronMix -> MaterialMix;
      DustMix -> MaterialMix;
      TabulatedDustMix -> DustMix;
        MeanFileDustMix -> TabulatedDustMix;
      SingleGrainDustMix -> DustMix;
        MeanInterstellarDustMix -> SingleGrainDustMix;
      MultiGrainDustMix -> DustMix;
        DraineLiDustMix -> MultiGrainDustMix;
        ZubkoDustMix -> MultiGrainDustMix;
        ThemisDustMix -> MultiGrainDustMix;
        ConfigurableDustMix -> MultiGrainDustMix;
}
\enddot

The MaterialMix class hierarchy allows fundamentally different material types (e.g. dust,
electrons, and hydrogen-dominated gas) to be implemented as part of a single framework. The common public interface
offers the material properties required for tracing photon packets through a material, in other words, for processing
absorption and scattering. Material properties that may be needed to calculate secondary emission spectra (e.g. thermal
emission from dust grains) are offered by additional interfaces that depend on the material type.

\subsection DustClassMaterial MaterialMix class

The MaterialMix class defines an abstract common interface to obtain the following basic material properties:
- the mass per entity \f$\mu\f$
- the absorption cross section per entity \f$\varsigma^{\text{abs}}_{\lambda}\f$
- the scattering cross section per entity \f$\varsigma^{\text{sca}}_{\lambda}\f$
- the total extinction cross section per entity \f$\varsigma^{\text{ext}}_{\lambda}
     = \varsigma^{\text{abs}}_{\lambda} + \varsigma^{\text{sca}}_{\lambda}\f$
- the scattering albedo \f$\varpi_\lambda
     = \varsigma_{\lambda}^{\text{sca}} / \varsigma_{\lambda}^{\text{ext}}\f$
- scattering phase function properties; depending on the supported scattering mode this may be:
  - the assymmetry parameter \f$g\f$ for the Henyey-Greenstein phase function
  - a custom phase function \f$\Phi_\lambda(\cos\theta)\f$ that depends only on the cosine of
    the scattering angle \f$\theta\f$
  - a custom phase function \f$\Phi_\lambda(\theta,\phi)\f$ that depends on both scattering angles
    \f$\theta\f$ and \f$\phi\f$, and on the polarization state of the incoming radiation
- the equilibrium temperature \f$T_{\text{eq}}\f$ for a given embedding radiation field,
  using average material properties and assuming local thermal equilibrium conditions

The \c SKIRT photon packet lifecycle allows a material mix to support one of three scattering modes:

- \c HenyeyGreenstein: the material mix supplies the assymmetry parameter \f$g\f$ for the Henyey-Greenstein phase
function. For a value of \f$g=0\f$, isotropic scattering is implemented directly rather than subsituting zero into the
Henyey-Greenstein phase function.

- \c MaterialPhaseFunction: the material mix implements a custom phase function that depends only on the cosine of the
scattering angle, \f$\cos \theta\f$. This mode does not support polarized radiation.

- \c SphericalPolarization: the material mix supports polarization through scattering by spherical particles. In this
mode, the phase function depends on the polarization state of the incoming radiation, and the polarization state of the
outgoing radiation must be updated appropriately. The phase function depends on both scattering angles \f$\theta\f$ and
\f$\varphi\f$.

\subsection DustClassDust DustMix class

The DustMix class implements the common interface defined by the MaterialMix base class for obtaining optical material
properties. Depending on the scattering mode (selected by each subclass), the DustMix setup machinery requests the
relevant optical dust properties from the subclass, and caches this information for later use. During the simulation,
these properties can then be served up without further access to the subclass.

The properties served through this common interface correspond to the properties of a single grain population that is
representative for the complete dust mix. In the context of tracking photon paths through a dusty medium, using
integrated absorption and scattering cross sections and Mueller matrix coefficients is mathematically exact. In other
words, for scattering modes \c MaterialPhaseFunction and \c SphericalPolarization, the representative grain approach
does not involve an approximation. However, the calculation of a representative scattering asymmetry parameter \f$g\f$
for use with the \c HenyeyGreenstein scattering mode does involve a non-exact averaging procedure. Because the
Henyey-Greenstein scattering phase function is non-physical to begin with, using a single approximate \f$g\f$ value for
the complete dust mix is usually considered to be acceptable.

The DustMix class in turn has three abstract subclasses, each implementing a different approach to obtaining the
relevant dust properties:

- TabulatedGrainDustMix implements a dust mix described by tabulated properties for a single representative grain using
the Henyey-Greenstein scattering mode. The optical dust properties are read from a user-supplied input file or can be
listed directly inside the configuration file. This class and its subclasses are provided mostly for testing and
benchmarking purposes.

- SingleGrainDustMix implements a dust mix described by a single representative grain, with or without support for
polarization by scattering. The optical dust properties are retrieved from stored table resources provided with \c
SKIRT. Subclasses must merely provide the names of the relevant resource files.

- MultiGrainDustMix implements a dust mix described by one or more grain populations, each with their own grain
composition and size distribution, and with or without support for polarization by scattering. The class offers
facilities to its subclasses to add dust grain populations to the dust mix. Based on this information it calculates the
representative optical properties required for the common interface.

The information offered by the SingleGrainDustMix and TabulatedGrainDustMix classes is insufficient to accurately
calculate dust emission spectra for the dust mixture. This is so because the emission spectrum is a nonlinear function
of the grain size (among many other things), and thus a single grain cannot accurately represent a population with a
(potentialy large) range of grain sizes. The MultiGrainDustMix class therefore implements additional functionality to
allow calculating the emission spectrum for multiple grain populations with given optical and calorimetric properties
and with a given size distribution.

\subsection DustClassMulti MultiGrainDustMix class

As noted in the previous section, the MultiGrainDustMix class implements a dust mix described by one or more grain
populations, each with their own grain composition and size distribution. The class obtains the following information
obtained for each of the dust grain populations added by the subclass: the absorption efficiencies
\f$Q^{\text{abs}}(\lambda,a)\f$, the scattering efficiencies \f$Q^{\text{sca}}(\lambda,a)\f$, the scattering phase
function asymmetry parameter \f$g(\lambda,a)\f$, the Mueller matrix coefficients \f$S^\text{xx}(\lambda,a,\theta)\f$,
the bulk density \f$\rho_{\text{bulk}}\f$ of the grain material, and the properly normalized grain size distribution
per hydrogen atom \f$\Omega(a)=(\frac{\text{d}n_\text{D}}{\text{d}a})/n_\text{H}\f$ in the range
\f$[a_\text{min},a_\text{max}]\f$.

\subsubsection DustClassMultiRep Calculating representative grain properties

The basic representative grain properties expected by the common MaterialMix interface are calculated by integrating
over the grain size distribution \f$\Omega(a)\f$ using a builtin logarithmic grid and accumulating over all grain
populations \f$c\f$, using the formulas listed below.

The absorption and scattering cross sections per hydrogen atom \f$\varsigma_{\ell}^{\text{abs}}\f$ and
\f$\varsigma_{\ell}^{\text{abs}}\f$ for the \f$\ell\f$'th wavelength are calculated using \f[
\varsigma_{\ell}^{\text{abs}} = \sum_c \int_{a_{\text{min},c}}^{a_{\text{max},c}} \Omega_c(a)\,
Q^{\text{abs}}_c(\lambda_\ell,a)\, \pi a^2\, {\text{d}}a \f] and \f[ \varsigma_{\ell}^{\text{sca}} = \sum_c
\int_{a_{\text{min},c}}^{a_{\text{max},c}} \Omega_c(a)\, Q^{\text{sca}}_c(\lambda_\ell,a)\, \pi a^2\, {\text{d}}a. \f]

The Mueller matrix coefficients provided by the grain population are assumed to be expressed as a cross section (in
arbitrary units). They are thus integrated over the size distribution without again multiplying by the grain cross
section, i.e. using \f[ S^\text{xx}_{\ell,\text{t}} = \sum_c \int_{a_{\text{min},c}}^{a_{\text{max},c}} \Omega_c(a)\,
S^\text{xx}_c(\lambda_\ell,a,\theta_\text{t})\, {\text{d}}a \f]

The representative asymmetry parameter \f$g_{\ell}\f$ is averaged over the scattering cross section and thus calculated
using \f[ g_{\ell} = \frac{1}{\varsigma_{\ell}^{\text{sca}}} \sum_c \int_{a_{\text{min},c}}^{a_{\text{max},c}}
\Omega_c(a)\, g_c(\lambda_\ell,a)\, Q^{\text{sca}}_c(\lambda_\ell,a)\, \pi a^2\, {\text{d}}a. \f]

The dust mass per hydrogen atom \f$\mu\f$ is calculated by integrating the bulk density over the size distribution, \f[
\mu = \sum_c \int_{a_{\text{min},c}}^{a_{\text{max},c}} \Omega_c(a)\, \rho_{\text{bulk},c}\, \frac{4\pi}{3}\, a^3\,
{\text{d}}a. \f]

\subsubsection DustClassMultiEmi Calculating dust emission

The representative grain properties described above and offered by the public MaterialMix interface supported by this
class are insufficient to accurately calculate dust emission spectra for the dust mixture. This is so because the
emission spectrum is a nonlinear function of (among many other things) the grain size, and thus a single grain cannot
accurately represent a population with a (potentialy large) range of grain sizes. Furthermore, smaller dust grains are
often not in local thermal equilibrium, and instead are heated stochastically by individual photon absorption events.
Modeling emission for these grains involves a temperature probability distribution rather than just an equilibrium
temperature. The calculation needs calorimetric properties of the grain material in addition to optical properties.

It is numerically intractable to handle every possible grain size seperately. Instead, the MultiGrainDustMix class
discretizes the grain size distribution for each type of grain material into a number of consecutive size bins (on a
logarithmic scale), and calculates the optical and calorimetric properties of a representative grain for each of these
bins. The number of bins for each type of grain material can be configured by the user. A larger number of bins
improves the accuracy of the dust emission spectra. On the other hand, the calculation time scales roughly linearly
with the number of bins.

The MultiGrainDustMix class uses one of two methods to calculate the emissivity of the dust mix:

- Assuming local thermal equilibrium for each representative grain (size bin): this method is fast but inaccurate
because the equilibrium assumption is usually not justified. See the EquilibriumDustEmissionCalculator class for more
information.

- Calculating a temperature probability distribution for each representative grain (size bin) to take into account
stochastically heated grains: this second method is substantially more accurate but also much slower. See the
StochasticDustEmissionCalculator class for more information.

\subsection DustClassTurn Turn-key dust mixes

\c SKIRT offers a range of built-in "turn-key" dust mixes representing sets of dust properties that have been published
by various authors, including for example:

- MeanInterstellarDustMix: represents a population of identical dust grains approximating those of a mixture that is
appropriate for the typical interstellar dust medium, based on publications by Draine, Li, and Weingartner. This dust
mix is provided primarily for testing and tutorial purposes. Because it is a single-grain dust mix, it should not be
used for calculating accurate dust emission spectra.

- DraineLiDustMix: represents a dust mixture of silicate, graphite, and PAH dust grains designed by Draine \& Li 2007
such that the global dust properties accurately reproduce the extinction curve of the Milky Way.

- ZubkoDustMix: represents a realistic dust mixture of bare silicate, graphite, neutral PAH and ionized PAH dust grains
designed by Zubko, Dwek \& Arendt 2004 such that the global dust properties accurately reproduce the extinction,
emission and abundance constraints on the Milky Way.

- ThemisDustMix: represents the THEMIS model for dust in the diffuse interstellar medium described by Jones et al. 2017
and the references therein. The model includes amorphous silicates with forsterite-normative composition and with
enstatite-normative composition, and amorphous carbonaceous dust grains.

Refer to the respective classes (and other DustMix subclasses) for more information.

\subsection DustClassConfig Configurable dust mixes

The ConfigurableDustMix class represents a fully user-configurable dust mix described by one or more dust grain
populations. Specifically, the class can be configured with a list of GrainPopulation instances, each of which
represents a particular dust grain population with configurable grain composition, grain size distribution, and size
bin discretization. This is illustrated in the following diagram (connections starting with a triangle denote
inheritance; connections starting with a diamond denote aggregation).

\dot
digraph configurabledustmix {
    rankdir=LR;
    node [shape=rect, fontname=Helvetica, fontsize=10];

    DustMix [label="DustMix" URL="\ref DustMix"];
    MultiGrainDustMix [label="MultiGrainDustMix" URL="\ref MultiGrainDustMix"];
    ConfigurableDustMix [label="ConfigurableDustMix" URL="\ref ConfigurableDustMix"];
    GrainPopulation [label="GrainPopulation" URL="\ref GrainPopulation"];
    GrainPopulation2 [label="GrainPopulation..." URL="\ref GrainPopulation"];
    GrainComposition [label="GrainComposition" URL="\ref GrainComposition"];
    DraineGraphiteGrainComposition [label="DraineGraphiteGrainComposition" URL="\ref DraineGraphiteGrainComposition"];
    GrainSizeDistribution [label="GrainSizeDistribution" URL="\ref GrainSizeDistribution"];
    PowerLawGrainSizeDistribution [label="PowerLawGrainSizeDistribution" URL="\ref PowerLawGrainSizeDistribution"];

    { rank=same; DustMix; MultiGrainDustMix; ConfigurableDustMix }
    { rank=same; GrainPopulation; GrainPopulation2 }
    { rank=same; GrainComposition; DraineGraphiteGrainComposition;
                 GrainSizeDistribution; PowerLawGrainSizeDistribution }

    DustMix -> MultiGrainDustMix [dir=back arrowtail=empty];
    MultiGrainDustMix -> ConfigurableDustMix [dir=back arrowtail=empty];
    GrainComposition -> DraineGraphiteGrainComposition [dir=back arrowtail=empty];
    GrainSizeDistribution -> PowerLawGrainSizeDistribution [dir=back arrowtail=empty];

    ConfigurableDustMix -> GrainPopulation  [dir=back arrowtail=ediamond];
    ConfigurableDustMix -> GrainPopulation2  [dir=back arrowtail=ediamond];
    GrainPopulation -> GrainComposition  [dir=back arrowtail=ediamond];
    GrainPopulation -> GrainSizeDistribution  [dir=back arrowtail=ediamond];
}
\enddot

A GrainComposition object represents the optical and calorimetric properties of a particular grain material, according
to a certain model. A GrainSizeDistribution object represents a particular grain size distribution function. For each
grain population, a ConfigurableDustMix object holds a GrainPopulation object, which in turn holds a GrainComposition
object and a GrainSizeDistribution object, and specifies the number of size bins used for discretizing the size
distribution.

In addition, the user can define the amount of dust in each grain population by specifying one of the
following three quantities:
 - an absolute dust mass per hydrogen atom;
 - a ratio of dust mass per hydrogen mass;
 - a proportionality factor on the size distribution.

For example, one could mimic an MRNDustMix with the following ski file configuration:

\verbatim
<ConfigurableDustMix scatteringType="HenyeyGreenstein">
    <populations type="GrainPopulation">
        <GrainPopulation numSizes="10" normalizationType="FactorOnSizeDistribution"
                         factorOnSizeDistribution="7.762471166e-31">
            <composition type="GrainComposition">
                <DraineSilicateGrainComposition/>
            </composition>
            <sizeDistribution type="GrainSizeDistribution">
                <PowerLawGrainSizeDistribution minSize="0.005 micron" maxSize="0.25 micron"
                                               exponent="3.5"/>
            </sizeDistribution>
        </GrainPopulation>
        <GrainPopulation numSizes="10" normalizationType="FactorOnSizeDistribution"
                         factorOnSizeDistribution="7.413102413e-31">
            <composition type="GrainComposition">
                <DraineGraphiteGrainComposition/>
            </composition>
            <sizeDistribution type="GrainSizeDistribution">
                <PowerLawGrainSizeDistribution minSize="0.005 micron" maxSize="0.25 micron"
                                               exponent="3.5"/>
            </sizeDistribution>
        </GrainPopulation>
    </populations>
</ConfigurableDustMix>
\endverbatim

\section DustNormal Normalizing dust media components

It is an important objective for the dust configuration in \c SKIRT to be understandable and transparent. Multiple dust
populations should combine in a simple "linear" manner regardless of how they are included in the medium system. Based
on a concrete example, this section demonstrates how this objective can be achieved.

To simplify the notation, we consider the dust properties at a single fixed wavelength so that we can omit the
wavelength index. We also focus the discussion on the total extinction to avoid the upper index, and we leave the
scattering asymmetry parameter aside.

A core issue is that when combining dust populations, the cross sections and masses per hydrogen atom can simply be
added:
\f[ \varsigma=\sum_c\varsigma_{c} \quad;\quad \mu=\sum_c\mu_{c}, \f]
but this is not true for the mass coefficients:
\f[ \kappa=\frac{\varsigma}{\mu}=\frac{\sum_c\varsigma_{c}}{\sum_c\mu_{c}}
    \neq \sum_c\frac{\varsigma_{c}}{\mu_c}=\sum_c\kappa_{c}. \f]

\subsection DustNormalAddit Normalization schemes

Consider a \c SKIRT configuration containing one or more dust media components, each with a specific geometry and a
particular dust mix. Each dust mix has a number of grain populations. Let us denote dust components (i.e. geometries)
with the index \f$h\f$ and grain populations for each component with the index \f$c\f$. The various dust mixes in this
configuration thus define the cross sections per hydrogen atom \f$\varsigma_{h,c}\f$ and the dust masses per hydrogen
atom \f$\mu_{h,c}\f$ for each dust component and dust population. In addition, the geometry for each dust component
defines the dust mass density distribution \f$\rho_{h}(\vec{r})\f$ for that dust component, discretized over the dust
grid, with arbitrary scaling (generally the distribution is normalized to unity).

The mass density distribution \f$\rho_{h}(\vec{r})\f$ can then be normalized to a given total mass \f$M_h\f$ or to a
given optical depth \f$\tau_h\f$ along a specific path S using \f[M_h = \int_\text{V}\rho_{h}(\vec{r})\,\text{d}V \f]
\f[\tau_h = \int_\text{S}\kappa_{h}\,\rho_{h}(\vec{r})\,\text{d}s \f] where the derived dust mix property
\f$\kappa_{h}\f$ is calculated according to \f[\kappa_{h}=\frac{\sum_c\varsigma_{h,c}}{\sum_c\mu_{h,c}}.\f]

\subsection DustNormalExample A specific example

Now consider a configuration consisting of two dust populations, named 1 and 2, with identical spatial distribution.
There are two distinct ways to configure this model in SKIRT:
 - configuration A: a single dust component using a dust mix with the two populations 1 and 2;
 - configuration B: two dust components with identical spatial distribution,
   the first using a dust mix with population 1 and the second using a dust mix with population 2.

Given appropriate normalization of the respective dust components, we expect the results of configurations
A and B to be identical.

In both cases, the simulation obtains the cross sections \f$\varsigma_1, \varsigma_2\f$ and dust masses per hydrogen
atom \f$\mu_1, \mu_2\f$ for each population. In configuration A there is a single dust component with mass density
distribution \f$\rho_\text{A}\f$ and with mass coefficient
\f$\kappa_\text{A}=(\varsigma_1+\varsigma_2)/(\mu_1+\mu_2)\f$. In configuration B there are two dust components with
dust mass density distribution \f$\rho_\text{B1}\f$ and \f$\rho_\text{B2}\f$ and with mass coefficients
\f$\kappa_\text{B1}=\varsigma_1/\mu_1\f$ and \f$\kappa_\text{B2}=\varsigma_2/\mu_2\f$.

\subsubsection DustNormalExampleMass Normalization on mass

Assume that we are given the total normalization dust mass \f$M\f$ for configuration A. We'd like to find the
normalization masses \f$M_1\f$ and \f$M_2\f$ for each of the dust components in configuration B so that the
total optical depth along an arbitrary path is identical in both configurations.

In configuration A the normalization equation reads
\f[ M = \int_\text{V}\rho_\text{A}(\vec{r})\,\text{d}V \f]
and the total optical depth along an arbitrary path P is given by
\f[ \tau_\text{A} = \frac{\varsigma_1+\varsigma_2}{\mu_1+\mu_2} \int_\text{P}\rho_\text{A}(\vec{r})\,\text{d}s \f]

In configuration B the normalization equations read
\f[ M_1 = \int_\text{V}\rho_\text{B1}(\vec{r})\,\text{d}V \f]
\f[ M_2 = \int_\text{V}\rho_\text{B2}(\vec{r})\,\text{d}V \f]
and the total optical depth along an arbitrary path is given by
\f[ \tau_\text{B} = \frac{\varsigma_1}{\mu_1} \int_\text{P}\rho_\text{B1}(\vec{r})\,\text{d}s +
                    \frac{\varsigma_2}{\mu_2} \int_\text{P}\rho_\text{B2}(\vec{r})\,\text{d}s \f]

Since all geometries are identical, we can write
\f$\rho_\text{B1}(\vec{r})=b_1\rho_\text{A}(\vec{r})\f$ and
\f$\rho_\text{B2}(\vec{r})=b_2\rho_\text{A}(\vec{r})\f$
where \f$b_1,b_2\f$ are constants that don't dependent on \f$\vec{r}\f$.
Requiring \f$\tau_\text{A}=\tau_\text{B}\f$ and \f$M=M_1+M_2\f$ then leads to the system of equations
\f[ \frac{\varsigma_1+\varsigma_2}{\mu_1+\mu_2} = \frac{\varsigma_1}{\mu_1}b_1 + \frac{\varsigma_2}{\mu_2}b_2
\quad;\quad 1=b_1+b_2 \f]
in the unknowns \f$b_1\f$ and \f$b_2\f$. As can be easily verified by substitution, the solution of this system is
\f$b_1 = \frac{\mu_1}{\mu_1+\mu_2}\f$ and \f$b_2 = \frac{\mu_2}{\mu_1+\mu_2}\f$.
From the mass normalization equations above we see that \f$M_1/M=b_1\f$ and \f$M_2/M=b_2\f$ so that
\f[ M_1 = \frac{\mu_1}{\mu_1+\mu_2}M \quad;\quad M_2 = \frac{\mu_2}{\mu_1+\mu_2}M. \f]

In other words, the normalization mass must be distributed over the dust components proportional to the dust mass
of each dust population. A rather intuitive result!

\subsubsection DustNormalExampleDepth Normalization on optical depth

Assume that we are given the optical depth \f$\tau\f$ along a specific path S for normalizing configuration A.
We'd like to find the optical depths \f$\tau_1\f$ and \f$\tau_2\f$ (along the same path) for normalizing each
of the dust components in configuration B so that the total optical depth along an arbitrary path is identical
in both configurations.

In configuration A the normalization equation reads
\f[ \tau = \frac{\varsigma_1+\varsigma_2}{\mu_1+\mu_2} \int_\text{S}\rho_\text{A}(\vec{r})\,\text{d}s \f]
and the total optical depth along an arbitrary path is given by
\f[ \tau_\text{A} = \frac{\varsigma_1+\varsigma_2}{\mu_1+\mu_2} \int_\text{P}\rho_\text{A}(\vec{r})\,\text{d}s \f]

In configuration B the normalization equations read
\f[ \tau_1 = \frac{\varsigma_1}{\mu_1} \int_\text{S}\rho_\text{B1}(\vec{r})\,\text{d}s \f]
\f[ \tau_2 = \frac{\varsigma_2}{\mu_2} \int_\text{S}\rho_\text{B2}(\vec{r})\,\text{d}s \f]
and the total optical depth along an arbitrary path is given by
\f[ \tau_\text{B} = \frac{\varsigma_1}{\mu_1} \int_\text{P}\rho_\text{B1}(\vec{r})\,\text{d}s +
                    \frac{\varsigma_2}{\mu_2} \int_\text{P}\rho_\text{B2}(\vec{r})\,\text{d}s \f]

Since all geometries are identical, we can write
\f$\rho_\text{B1}(\vec{r})=b_1\rho_\text{A}(\vec{r})\f$ and
\f$\rho_\text{B2}(\vec{r})=b_2\rho_\text{A}(\vec{r})\f$
where \f$b_1,b_2\f$ are constants that don't dependent on \f$\vec{r}\f$.
Requiring \f$\tau_\text{A}=\tau_\text{B}\f$ and \f$\tau=\tau_1+\tau_2\f$ both lead to the equation
\f[ \frac{\varsigma_1+\varsigma_2}{\mu_1+\mu_2} = \frac{\varsigma_1}{\mu_1}b_1 + \frac{\varsigma_2}{\mu_2}b_2 \f]
in the unknowns \f$b_1\f$ and \f$b_2\f$. As can be easily verified by substitution, a solution of this equation is
\f$b_1 = \frac{\mu_1}{\mu_1+\mu_2}\f$ and \f$b_2 = \frac{\mu_2}{\mu_1+\mu_2}\f$. If we also require that the total
dust mass in the system remains the same, then this is the only solution (as shown in the previous subsection).
Otherwise there is a family of solutions and we can arbitrarily select this one.

From the optical depth normalization equations above we see that
\f$\tau_1=b_1\frac{\varsigma_1}{\mu_1}\left(\frac{\varsigma_1+\varsigma_2}{\mu_1+\mu_2}\right)^{-1}\tau\f$ and
\f$\tau_2=b_2\frac{\varsigma_2}{\mu_2}\left(\frac{\varsigma_1+\varsigma_2}{\mu_1+\mu_2}\right)^{-1}\tau\f$
so that after some basic algebra we obtain
\f[ \tau_1 = \frac{\varsigma_1}{\varsigma_1+\varsigma_2}\tau
\quad;\quad \tau_2 = \frac{\varsigma_2}{\varsigma_1+\varsigma_2}\tau. \f]

In other words, the optical depth must be distributed over the dust components proportional to the cross section
of each dust population. A rather intuitive result!

*/
